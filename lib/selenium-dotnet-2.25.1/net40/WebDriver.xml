<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WebDriver</name>
    </assembly>
    <members>
        <member name="T:OpenQA.Selenium.By">
            <summary>
            Provides a mechanism by which to find elements within a document.
            </summary>
            <remarks>It is possible to create your own locating mechanisms for finding documents.
            In order to do this,subclass this class and override the protected methods. However,
            it is expected that that all subclasses rely on the basic finding mechanisms provided 
            through static methods of this class. An example of this can be found in OpenQA.Support.ByIdOrName
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.By.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.By"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.By.#ctor(System.Func{OpenQA.Selenium.ISearchContext,OpenQA.Selenium.IWebElement},System.Func{OpenQA.Selenium.ISearchContext,System.Collections.ObjectModel.ReadOnlyCollection{OpenQA.Selenium.IWebElement}})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.By"/> class using the given functions to find elements.
            </summary>
            <param name="findElementMethod">A function that takes an object implementing <see cref="T:OpenQA.Selenium.ISearchContext"/>
            and returns the found <see cref="T:OpenQA.Selenium.IWebElement"/>.</param>
            <param name="findElementsMethod">A function that takes an object implementing <see cref="T:OpenQA.Selenium.ISearchContext"/> 
            and returns a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of the found<see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>.
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>/&gt;.</param>
        </member>
        <member name="M:OpenQA.Selenium.By.Id(System.String)">
            <summary>
            Gets a mechanism to find elements by their ID.
            </summary>
            <param name="idToFind">The ID to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.LinkText(System.String)">
            <summary>
            Gets a mechanism to find elements by their link text.
            </summary>
            <param name="linkTextToFind">The link text to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Name(System.String)">
            <summary>
            Gets a mechanism to find elements by their name.
            </summary>
            <param name="nameToFind">The name to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.XPath(System.String)">
            <summary>
            Gets a mechanism to find elements by an XPath query.
            </summary>
            <param name="xpathToFind">The XPath query to use.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.ClassName(System.String)">
            <summary>
            Gets a mechanism to find elements by their CSS class.
            </summary>
            <param name="classNameToFind">The CSS class to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
            <remarks>If an element has many classes then this will match against each of them.
            For example if the value is "one two onone", then the following values for the 
            className parameter will match: "one" and "two".</remarks>
        </member>
        <member name="M:OpenQA.Selenium.By.PartialLinkText(System.String)">
            <summary>
            Gets a mechanism to find elements by a partial match on their link text.
            </summary>
            <param name="partialLinkTextToFind">The partial link text to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.TagName(System.String)">
            <summary>
            Gets a mechanism to find elements by their tag name.
            </summary>
            <param name="tagNameToFind">The tag name to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.CssSelector(System.String)">
            <summary>
            Gets a mechanism to find elements by their cascading stylesheet (CSS) selector.
            </summary>
            <param name="cssSelectorToFind">The CSS selector to find.</param>
            <returns>A <see cref="T:OpenQA.Selenium.By"/> object the driver can use to find the elements.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.op_Equality(OpenQA.Selenium.By,OpenQA.Selenium.By)">
            <summary>
            Determines if two <see cref="T:OpenQA.Selenium.By"/> instances are equal.
            </summary>
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the two instances are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.op_Inequality(OpenQA.Selenium.By,OpenQA.Selenium.By)">
            <summary>
            Determines if two <see cref="T:OpenQA.Selenium.By"/> instances are unequal.
            </summary>s
            <param name="one">One instance to compare.</param>
            <param name="two">The other instance to compare.</param>
            <returns><see langword="true"/> if the two instances are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.FindElement(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds the first element matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext"/> object to use to search for the elements.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.FindElements(OpenQA.Selenium.ISearchContext)">
            <summary>
            Finds all elements matching the criteria.
            </summary>
            <param name="context">An <see cref="T:OpenQA.Selenium.ISearchContext"/> object to use to search for the elements.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.ToString">
            <summary>
            Gets a string representation of the finder.
            </summary>
            <returns>The string displaying the finder content.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal 
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the 
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.By.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.By.Description">
            <summary>
            Gets or sets the value of the description for this <see cref="T:OpenQA.Selenium.By"/> class instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.By.FindElementMethod">
            <summary>
            Gets or sets the method used to find a single element matching specified criteria.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.By.FindElementsMethod">
            <summary>
            Gets or sets the method used to find all elements matching specified criteria.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Cookie">
            <summary>
            Represents a cookie in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name, 
            value, domain, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name, 
            value, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name, 
            value, and path.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Cookie"/> class with a specific name and value.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.ToString">
            <summary>
            Creates and returns a string representation of the cookie. 
            </summary>
            <returns>A string representation of the cookie.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object">Object</see> is equal 
            to the current <see cref="T:System.Object">Object</see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object">Object</see> to compare with the 
            current <see cref="T:System.Object">Object</see>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object">Object</see>
            is equal to the current <see cref="T:System.Object">Object</see>; otherwise,
            <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Cookie.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Name">
            <summary>
            Gets the name of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Value">
            <summary>
            Gets the value of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Domain">
            <summary>
            Gets the domain of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Path">
            <summary>
            Gets the path of the cookie.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Secure">
            <summary>
            Gets a value indicating whether the cookie is secure.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Cookie.Expiry">
            <summary>
            Gets the expiration date of the cookie.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.DriverService">
            <summary>
            Exposes the service provided by a native WebDriver server executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the DriverService class.
            </summary>
            <param name="executable">The full path to the executable providing the service to drive the browser.</param>
            <param name="port">The port on which the driver executable should listen.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Dispose">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.DriverService"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Start">
            <summary>
            Starts the DriverService.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Dispose(System.Boolean)">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.DriverService"/>.
            </summary>
            <param name="disposing"><see langword="true"/> if the Dispose method was explicitly called; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverService.Stop">
            <summary>
            Stops the DriverService.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.ServiceUrl">
            <summary>
            Gets the Uri of the service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.IsRunning">
            <summary>
            Gets a value indicating whether the service is running.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.DriverServiceExecutableName">
            <summary>
            Gets the executable file name of the driver service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.DriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.DriverServiceNotFoundException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverException">
            <summary>
            Represents exceptions that are thrown when an error occurs during actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.WebDriverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.WebDriverException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.DriverServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.DriverServiceNotFoundException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.ElementNotVisibleException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.ElementNotVisibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.ElementNotVisibleException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.IAlert">
            <summary>
            Defines the interface through which the user can manipulate JavaScript alerts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.Dismiss">
            <summary>
            Dismisses the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.Accept">
            <summary>
            Accepts the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IAlert.SendKeys(System.String)">
            <summary>
            Sends keys to the alert.
            </summary>
            <param name="keysToSend">The keystrokes to send.</param>
        </member>
        <member name="P:OpenQA.Selenium.IAlert.Text">
            <summary>
            Gets the text of the alert.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ICapabilities">
            <summary>
            Capabilities of the browser that you are going to use
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ICapabilities.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability ot get.</param>
            <returns>Returns <see langword="true"/> if the browser has the capability; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ICapabilities.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set on the browser.</returns>
        </member>
        <member name="P:OpenQA.Selenium.ICapabilities.BrowserName">
            <summary>
            Gets the browser name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ICapabilities.Platform">
            <summary>
            Gets the platform
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ICapabilities.Version">
            <summary>
            Gets the browser version
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ICapabilities.IsJavaScriptEnabled">
            <summary>
            Gets a value indicating whether the browser is JavaScript enabled
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ICookieJar">
            <summary>
            Defines an interface allowing the user to manipulate cookies on the current page.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.AddCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Adds a cookie to the current page.
            </summary>
            <param name="cookie">The <see cref="T:OpenQA.Selenium.Cookie"/> object to be added.</param>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.GetCookieNamed(System.String)">
            <summary>
            Gets a cookie with the specified name.
            </summary>
            <param name="name">The name of the cookie to retrieve.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Cookie"/> containing the name. Returns <see langword="null"/>
            if no cookie with the specified name is found.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.DeleteCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Deletes the specified cookie from the page.
            </summary>
            <param name="cookie">The <see cref="T:OpenQA.Selenium.Cookie"/> to be deleted.</param>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.DeleteCookieNamed(System.String)">
            <summary>
            Deletes the cookie with the specified name from the page.
            </summary>
            <param name="name">The name of the cookie to be deleted.</param>
        </member>
        <member name="M:OpenQA.Selenium.ICookieJar.DeleteAllCookies">
            <summary>
            Deletes all cookies from the page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ICookieJar.AllCookies">
            <summary>
            Gets all cookies defined for the current page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IHasCapabilities">
            <summary>
            Defines the interface through which the user can determine the capabilities of a driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasCapabilities.Capabilities">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.ICapabilities"/> object describing the driver's capabilities.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IHasInputDevices">
            <summary>
            Provides access to input devices for advanced user interactions.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.Keyboard">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IKeyboard"/> object for sending keystrokes to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IHasInputDevices.Mouse">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IMouse"/> object for sending mouse commands to the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IJavaScriptExecutor">
            <summary>
            Defines the interface through which the user can execute JavaScript.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
            <remarks>
            <para>
            The <see cref="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteScript(System.String,System.Object[])"/>method executes JavaScript in the context of 
            the currently selected frame or window. This means that "document" will refer 
            to the current document. If the script has a return value, then the following 
            steps will be taken:
            </para>
            <para>
            <list type="bullet">
            <item><description>For an HTML element, this method returns a <see cref="T:OpenQA.Selenium.IWebElement"/></description></item>
            <item><description>For a number, a <see cref="T:System.Int64"/> is returned</description></item>
            <item><description>For a boolean, a <see cref="T:System.Boolean"/> is returned</description></item>
            <item><description>For all other cases a <see cref="T:System.String"/> is returned.</description></item>
            <item><description>For an array,we check the first element, and attempt to return a 
            <see cref="T:System.Collections.Generic.List`1"/> of that type, following the rules above. Nested lists are not
            supported.</description></item>
            <item><description>If the value is null or there is no return value,
            <see langword="null"/> is returned.</description></item>
            </list>
            </para>
            <para>
            Arguments must be a number (which will be converted to a <see cref="T:System.Int64"/>),
            a <see cref="T:System.Boolean"/>, a <see cref="T:System.String"/> or a <see cref="T:OpenQA.Selenium.IWebElement"/>.
            An exception will be thrown if the arguments do not meet these criteria. 
            The arguments will be made available to the JavaScript via the "arguments" magic 
            variable, as if the function were called via "Function.apply" 
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IJavaScriptExecutor.ExecuteAsyncScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript asynchronously in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IKeyboard">
            <summary>
            Provides methods representing basic keyboard actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the target.
            </summary>
            <param name="keySequence">A string representing the keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.PressKey(System.String)">
            <summary>
            Presses a key.
            </summary>
            <param name="keyToPress">The key value representing the key to press.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.IKeyboard.ReleaseKey(System.String)">
            <summary>
            Releases a key.
            </summary>
            <param name="keyToRelease">The key value representing the key to release.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.IllegalLocatorException">
            <summary>
            The exception that is thrown when an attempt is made to locate an item using invalid criteria.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.IllegalLocatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.IllegalLocatorException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.ILocatable">
            <summary>
            Defines the interface through which the user can discover where an element is on the screen.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILocatable.LocationOnScreenOnceScrolledIntoView">
            <summary>
            Gets the location of an element on the screen, scrolling it into view
            if it is not currently on the screen.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.ILocatable.Coordinates">
            <summary>
            Gets the coordinates identifying the location of this element using
            various frames of reference.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IMouse">
            <summary>
            Provides methods representing basic mouse actions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.Click(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the primary mouse button.
            </summary>
            <param name="where">An <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.DoubleClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Double-clicks at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to double-click.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseDown(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Presses the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to press the mouse button down.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseUp(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Releases the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to release the mouse button.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to move the mouse to.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
            <param name="offsetX">A horizontal offset from the coordinates specified in <paramref name="where"/>.</param>
            <param name="offsetY">A vertical offset from the coordinates specified in <paramref name="where"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.IMouse.ContextClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the secondary mouse button.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="T:OpenQA.Selenium.INavigation">
            <summary>
            Defines an interface allowing the user to access the browser's history and to 
            navigate to a given URL.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Back">
            <summary>
            Move back a single entry in the browser's history.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Forward">
            <summary>
            Move a single "item" forward in the browser's history.
            </summary>
            <remarks>Does nothing if we are on the latest page viewed.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)">
            <summary>
             Load a new web page in the current browser window.
            </summary>
            <param name="url">The URL to load. It is best to use a fully qualified URL</param>
            <remarks>
            Calling the <see cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/> method will load a new web page in the current browser window. 
            This is done using an HTTP GET operation, and the method will block until the 
            load is complete. This will follow redirects issued either by the server or 
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since 
            should the underlying page change while your test is executing the results of 
            future calls against this interface will be against the freshly loaded page. 
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)">
            <summary>
             Load a new web page in the current browser window.
            </summary>
            <param name="url">The URL to load.</param>
            <remarks>
            Calling the <see cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/> method will load a new web page in the current browser window. 
            This is done using an HTTP GET operation, and the method will block until the 
            load is complete. This will follow redirects issued either by the server or 
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since 
            should the underlying page change while your test is executing the results of 
            future calls against this interface will be against the freshly loaded page. 
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.INavigation.Refresh">
            <summary>
            Refreshes the current page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.InvalidCookieDomainException">
            <summary>
            The exception that is thrown when the users attempts to set a cookie with an invalid domain.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidCookieDomainException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidCookieDomainException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.InvalidElementStateException">
            <summary>
            The exception that is thrown when a reference to an element is no longer valid.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidElementStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidElementStateException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.InvalidSelectorException">
            <summary>
            The exception that is thrown when an element is not visible.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.InvalidSelectorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.InvalidSelectorException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.IOptions">
            <summary>
            Defines an interface allowing the user to set options on the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IOptions.Timeouts">
            <summary>
            Provides access to the timeouts defined for this driver.
            </summary>
            <returns>An object implementing the <see cref="T:OpenQA.Selenium.ITimeouts"/> interface.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IOptions.Cookies">
            <summary>
            Gets an object allowing the user to manipulate cookies on the page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IOptions.Window">
            <summary>
            Gets an object allowing the user to manipulate the currently-focused browser window.
            </summary>
            <remarks>"Currently-focused" is defined as the browser window having the window handle
            returned when IWebDriver.CurrentWindowHandle is called.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.IRotatable">
            <summary>
            Represents rotation of the browser view for orientation-sensitive devices. 
            When using this with a real device, the device should not be moved so that 
            the built-in sensors do not interfere. 
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IRotatable.Orientation">
            <summary>
            Gets or sets the screen orientation of the browser on the device.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ISearchContext">
            <summary>
            Defines the interface used to search for elements.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement"/> using the given method. 
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">If no element matches the criteria.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ISearchContext.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context 
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITakesScreenshot">
            <summary>
            Defines the interface used to take screen shot images of the screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITakesScreenshot.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITargetLocator">
            <summary>
            Defines the interface through which the user can locate a given frame or window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(System.Int32)">
            <summary>
            Select a frame by its (zero-based) index.
            </summary>
            <param name="frameIndex">The zero-based index of the frame to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the frame cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(System.String)">
            <summary>
            Select a frame by its name or ID.
            </summary>
            <param name="frameName">The name of the frame to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the frame cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Frame(OpenQA.Selenium.IWebElement)">
            <summary>
            Select a frame using its previously located <see cref="T:OpenQA.Selenium.IWebElement"/>
            </summary>
            <param name="frameElement">The frame element to switch to.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the specified frame.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchFrameException">If the element is neither a FRAME nor an IFRAME element.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">If the element is no longer valid.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Window(System.String)">
            <summary>
            Switches the focus of future commands for this driver to the window with the given name.
            </summary>
            <param name="windowName">The name of the window to select.</param>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the given window.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchWindowException">If the window cannot be found.</exception>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.DefaultContent">
            <summary>
            Selects either the first frame on the page or the main document when a page contains iframes.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebDriver"/> instance focused on the default frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.ActiveElement">
            <summary>
            Switches to the element that currently has the focus, or the body element 
            if no element with focus can be detected.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IWebElement"/> instance representing the element 
            with the focus, or the body element if no element with focus can be detected.</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITargetLocator.Alert">
            <summary>
            Switches to the currently active modal dialog for this particular driver instance.
            </summary>
            <returns>A handle to the dialog.</returns>
        </member>
        <member name="T:OpenQA.Selenium.ITimeouts">
            <summary>
            Defines the interface through which the user can define timeouts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.ITimeouts.ImplicitlyWait(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait when searching for an
            element if it is not immediately present.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.</param>
            <returns>A self reference</returns>
            <remarks>
            When searching for a single element, the driver should poll the page
            until the element has been found, or this timeout expires before throwing
            a <see cref="T:OpenQA.Selenium.NoSuchElementException"/>. When searching for multiple elements,
            the driver should poll the page until at least one element has been found
            or this timeout has expired.
            <para>
            Increasing the implicit wait timeout should be used judiciously as it
            will have an adverse effect on test run time, especially when used with
            slower location strategies like XPath.
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.ITimeouts.SetScriptTimeout(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait when executing JavaScript asynchronously.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.
            Setting this parameter to <see cref="F:System.TimeSpan.MinValue"/> will allow the script to run indefinitely.</param>
            <returns>A self reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.ITimeouts.SetPageLoadTimeout(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait for a page to load when setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/> property.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.
            Setting this parameter to <see cref="F:System.TimeSpan.MinValue"/> will allow the page to load indefinitely.</param>
            <returns>A self reference</returns>
        </member>
        <member name="T:OpenQA.Selenium.IWebDriver">
            <summary>
            Defines the interface through which the user controls the browser.
            </summary>
            <remarks>
            The <see cref="T:OpenQA.Selenium.IWebDriver"/> interface is the main interface to use for testing, which
            represents an idealised web browser. The methods in this class fall into three categories: 
            <list type="bullet">
            <item><description>Control of the browser itself</description></item>
            <item><description>Selection of <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see></description></item>
            <item><description>Debugging aids</description></item>
            </list>
            <para>
            Key properties and methods are <see cref="P:OpenQA.Selenium.IWebDriver.Url"/>, which is used to 
            load a new web page by setting the property, and the various methods similar 
            to <see cref="M:OpenQA.Selenium.ISearchContext.FindElement(OpenQA.Selenium.By)"/>, which is used to find <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see>.
            </para>
            <para>
            You use the interface by instantiate drivers that implement of this interface.
            You should write your tests against this interface so that you may "swap in" a 
            more fully featured browser when there is a requirement for one.
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Close">
            <summary>
            Close the current window, quitting the browser if it is the last window currently open.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Quit">
            <summary>
            Quits this driver, closing every associated window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Manage">
            <summary>
            Instructs the driver to change its settings.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.IOptions"/> object allowing the user to change
            the settings of the driver.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.Navigate">
            <summary>
            Instructs the driver to navigate the browser to another location.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.INavigation"/> object allowing the user to access 
            the browser's history and to navigate to a given URL.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IWebDriver.SwitchTo">
            <summary>
            Instructs the driver to send future commands to a different frame or window.
            </summary>
            <returns>An <see cref="T:OpenQA.Selenium.ITargetLocator"/> object which can be used to select
            a frame or window.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.Url">
            <summary>
            Gets or sets the URL the browser is currently displaying.
            </summary>
            <remarks>
            Setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/> property will load a new web page in the current browser window. 
            This is done using an HTTP GET operation, and the method will block until the 
            load is complete. This will follow redirects issued either by the server or 
            as a meta-redirect from within the returned HTML. Should a meta-redirect "rest"
            for any duration of time, it is best to wait until this timeout is over, since 
            should the underlying page change while your test is executing the results of 
            future calls against this interface will be against the freshly loaded page. 
            </remarks>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.Title">
            <summary>
            Gets the title of the current browser window.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.PageSource">
            <summary>
            Gets the source of the page last loaded by the browser.
            </summary>
            <remarks>
            If the page has been modified after loading (for example, by JavaScript) 
            there is no guarentee that the returned text is that of the modified page. 
            Please consult the documentation of the particular driver being used to 
            determine whether the returned text reflects the current state of the page 
            or the text last sent by the web server. The page source returned is a 
            representation of the underlying DOM: do not expect it to be formatted 
            or escaped in the same way as the response sent from the web server. 
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.CurrentWindowHandle">
            <summary>
            Gets the current window handle, which is an opaque handle to this 
            window that uniquely identifies it within this driver instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWebDriver.WindowHandles">
            <summary>
            Gets the window handles of open browser windows.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IWebElement">
            <summary>
            Defines the interface through which the user controls elements on the page.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.IWebElement"/> interface represents an HTML element. 
            Generally, all interesting operations to do with interacting with a page will
            be performed through this interface. 
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>If this element is a text entry element, the <see cref="M:OpenQA.Selenium.IWebElement.Clear"/>
            method will clear the value. It has no effect on other elements. Text entry elements 
            are defined as elements with INPUT or TEXTAREA tags.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in 
            <see cref="T:OpenQA.Selenium.Keys"/>.</remarks>
            <seealso cref="T:OpenQA.Selenium.Keys"/>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Thrown when the target element is not enabled.</exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>If this current element is a form, or an element within a form, 
            then this will be submitted to the web server. If this causes the current 
            page to change, then this method will block until the new page is loaded.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.Click">
            <summary>
            Clicks this element. 
            </summary>
            <remarks>
            <para>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.IWebElement.Click"/> 
            method will attempt to block until the page has loaded. After calling the 
            <see cref="M:OpenQA.Selenium.IWebElement.Click"/> method, you should discard all references to this 
            element unless you know that the element and the page will still be present. 
            Otherwise, any further operations performed on this element will have an undefined.
            behavior.
            </para>
            <para>
            If this element is not clickable, then this operation is ignored. This allows you to
            simulate a users to accidentally missing the target when clicking. 
            </para>
            </remarks>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a <see langword="null"/> if the 
            value is not set.</returns>
            <remarks>The <see cref="M:OpenQA.Selenium.IWebElement.GetAttribute(System.String)"/> method will return the current value
            of the attribute, even if the value has been modified after the page has been 
            loaded. Note that the value of the following attributes will be returned even if 
            there is no explicit attribute on the element:
            <list type="table">
            <listheader>
            <term>Attribute name</term>
            <term>Value returned if not explicitly specified</term>
            <term>Valid element types</term>
            </listheader>
            <item>
            <description>checked</description>
            <description>checked</description>
            <description>Check Box</description>
            </item>
            <item>
            <description>selected</description>
            <description>selected</description>
            <description>Options in Select elements</description>
            </item>
            <item>
            <description>disabled</description>
            <description>disabled</description>
            <description>Input and other UI elements</description>
            </item>
            </list>
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>The value of the specified CSS property.</returns>
            <remarks>The value returned by the <see cref="M:OpenQA.Selenium.IWebElement.GetCssValue(System.String)"/>
            method is likely to be unpredictable in a cross-browser environment. 
            Color values should be returned as hex strings. For example, a 
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.IWebElement.TagName"/> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specifiedby the HTML markup &lt;input name="foo" /&gt;. 
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.IWebElement.Enabled"/> property will generally 
            return <see langword="true"/> for everything except explicitly disabled input elements.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point"/> object containgin the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.IWebElement.Size"/> object containing the height and width of this element.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.IWebElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.IWebElement.Displayed"/> property avoids the problem 
            of having to parse an element's "style" attribute to determine
            visibility of an element.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="T:OpenQA.Selenium.IWindow">
            <summary>
            Provides methods for getting and setting the size and position of the browser window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IWindow.Maximize">
            <summary>
            Maximizes the current window if it is not already maximized.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IWindow.Position">
            <summary>
            Gets or sets the position of the browser window relative to the upper-left corner of the screen.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.moveTo() method.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.IWindow.Size">
            <summary>
            Gets or sets ths size of the outer browser window, including title bars and window borders.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.resizeTo() method.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Keys">
            <summary>
            Representations of pressable keys that are not text keys for sending to the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Null">
            <summary>
            Represents the NUL keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Cancel">
            <summary>
            Represents the Cancel keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Help">
            <summary>
            Represents the Help keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Backspace">
            <summary>
            Represents the Backspace key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Tab">
            <summary>
            Represents the Tab key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Clear">
            <summary>
            Represents the Clear keystroke.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Return">
            <summary>
            Represents the Return key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Enter">
            <summary>
            Represents the Enter key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Shift">
            <summary>
            Represents the Shift key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftShift">
            <summary>
            Represents the Shift key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Control">
            <summary>
            Represents the Control key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftControl">
            <summary>
            Represents the Control key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Alt">
            <summary>
            Represents the Alt key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.LeftAlt">
            <summary>
            Represents the Alt key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Pause">
            <summary>
            Represents the Pause key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Escape">
            <summary>
            Represents the Escape key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Space">
            <summary>
            Represents the Spacebar key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.PageUp">
            <summary>
            Represents the Page Up key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.PageDown">
            <summary>
            Represents the Page Down key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.End">
            <summary>
            Represents the End key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Home">
            <summary>
            Represents the Home key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Left">
            <summary>
            Represents the left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowLeft">
            <summary>
            Represents the left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Up">
            <summary>
            Represents the up arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowUp">
            <summary>
            Represents the up arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Right">
            <summary>
            Represents the right arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowRight">
            <summary>
            Represents the right arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Down">
            <summary>
            Represents the Left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.ArrowDown">
            <summary>
            Represents the Left arrow key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Insert">
            <summary>
            Represents the Insert key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Delete">
            <summary>
            Represents the Delete key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Semicolon">
            <summary>
            Represents the semi-colon key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Equal">
            <summary>
            Represents the equal sign key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad0">
            <summary>
            Represents the number pad 0 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad1">
            <summary>
            Represents the number pad 1 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad2">
            <summary>
            Represents the number pad 2 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad3">
            <summary>
            Represents the number pad 3 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad4">
            <summary>
            Represents the number pad 4 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad5">
            <summary>
            Represents the number pad 5 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad6">
            <summary>
            Represents the number pad 6 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad7">
            <summary>
            Represents the number pad 7 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad8">
            <summary>
            Represents the number pad 8 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.NumberPad9">
            <summary>
            Represents the number pad 9 key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Multiply">
            <summary>
            Represents the number pad multiplication key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Add">
            <summary>
            Represents the number pad addition key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Separator">
            <summary>
            Represents the number pad thousands separator key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Subtract">
            <summary>
            Represents the number pad subtraction key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Decimal">
            <summary>
            Represents the number pad decimal separator key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Divide">
            <summary>
            Represents the number pad division key.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F1">
            <summary>
            Represents the function key F1.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F2">
            <summary>
            Represents the function key F2.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F3">
            <summary>
            Represents the function key F3.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F4">
            <summary>
            Represents the function key F4.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F5">
            <summary>
            Represents the function key F5.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F6">
            <summary>
            Represents the function key F6.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F7">
            <summary>
            Represents the function key F7.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F8">
            <summary>
            Represents the function key F8.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F9">
            <summary>
            Represents the function key F9.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F10">
            <summary>
            Represents the function key F10.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F11">
            <summary>
            Represents the function key F12.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.F12">
            <summary>
            Represents the function key F12.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Meta">
            <summary>
            Represents the function key META.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Keys.Command">
            <summary>
            Represents the function key COMMAND.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NoAlertPresentException">
            <summary>
            The exception that is thrown when an alert is not found.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NotFoundException">
            <summary>
            The exception that is thrown when an item is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NotFoundException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoAlertPresentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoAlertPresentException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchElementException">
            <summary>
            The exception that is thrown when an element is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchElementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchElementException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchFrameException">
            <summary>
            The exception that is thrown when a frame is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchFrameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchFrameException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.NoSuchWindowException">
            <summary>
            The exception that is thrown when a window is not found.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.NoSuchWindowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.NoSuchWindowException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.PlatformType">
            <summary>
            Represents the known and supported Platforms that WebDriver runs on.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.Platform"/> class maps closely to the Operating System, 
            but differs slightly, because this class is used to extract information such as 
            program locations and line endings. </remarks>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Any">
            <summary>
            Any platform. This value is never returned by a driver, but can be used to find
            drivers with certain capabilities.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Windows">
            <summary>
            Any version of Microsoft Windows. This value is never returned by a driver, 
            but can be used to find drivers with certain capabilities.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.WinNT">
            <summary>
            Any Windows NT-based version of Microsoft Windows. This value is never returned 
            by a driver, but can be used to find drivers with certain capabilities. This value
            is equivalent to PlatformType.Windows.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.XP">
            <summary>
            Versions of Microsoft Windows that are compatible with Windows XP.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Vista">
            <summary>
            Versions of Microsoft Windows that are compatible with Windows Vista.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Mac">
            <summary>
            Any version of the Macintosh OS
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Unix">
            <summary>
            Any version of the Unix operating system.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Linux">
            <summary>
            Any version of the Linux operating system.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.PlatformType.Android">
            <summary>
            A version of the Android mobile operating system.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Platform">
            <summary>
            Represents the platform on which tests are to be run.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Platform.#ctor(OpenQA.Selenium.PlatformType)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Platform"/> class for a specific platform type.
            </summary>
            <param name="typeValue">The platform type.</param>
        </member>
        <member name="M:OpenQA.Selenium.Platform.IsPlatformType(OpenQA.Selenium.PlatformType)">
            <summary>
            Compares the platform to the specified type.
            </summary>
            <param name="compareTo">A <see cref="P:OpenQA.Selenium.Platform.PlatformType"/> value to compare to.</param>
            <returns><see langword="true"/> if the platforms match; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Platform.CurrentPlatform">
            <summary>
            Gets the current platform.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.MajorVersion">
            <summary>
            Gets the major version of the platform operating system.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.MinorVersion">
            <summary>
            Gets the major version of the platform operating system.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Platform.PlatformType">
            <summary>
            Gets the type of the platform.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ProxyKind">
            <summary>
            Describes the kind of proxy.
            </summary>
            <remarks>
            Keep these in sync with the Firefox preferences numbers:
            http://kb.mozillazine.org/Network.proxy.type
            </remarks>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.Direct">
            <summary>
             Direct connection, no proxy (default on Windows).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.Manual">
            <summary>
            Manual proxy settings (e.g., for httpProxy).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.ProxyAutoConfigure">
            <summary>
            Proxy autoconfiguration from URL.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.AutoDetect">
            <summary>
            Use proxy autodetection.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.System">
            <summary>
            Use the system values for proxy settings (default on Linux).
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ProxyKind.Unspecified">
            <summary>
            No proxy type is specified.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Proxy">
            <summary>
            Describes proxy settings to be used with a driver instance.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Proxy"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Proxy.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Proxy"/> class with the given proxy settings.
            </summary>
            <param name="settings">A dictionary of settings to use with the proxy.</param>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.Kind">
            <summary>
            Gets or sets the type of proxy.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.IsAutoDetect">
            <summary>
            Gets or sets a value indicating whether the proxy uses autodetection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.FtpProxy">
            <summary>
            Gets or sets the value of the proxy for the FTP protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.HttpProxy">
            <summary>
            Gets or sets the value of the proxy for the HTTP protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.NoProxy">
            <summary>
            Gets or sets the value for when no proxy is specified.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.ProxyAutoConfigUrl">
            <summary>
            Gets or sets the URL used for proxy autoconfiguration.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Proxy.SslProxy">
            <summary>
            Gets or sets the value of the proxy for the SSL protocol.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.ScreenOrientation">
            <summary>
            Represents possible screen orientations. 
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenOrientation.Portrait">
            <summary>
            Represents a portrait mode, where the screen is vertical.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.ScreenOrientation.Landscape">
            <summary>
            Represents Landscape mode, where the screen is horizontal.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Screenshot">
            <summary>
            Represents an image of the page currently loaded in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Screenshot"/> class.
            </summary>
            <param name="base64EncodedScreenshot">The image of the page as a Base64-encoded string.</param>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.SaveAsFile(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the screenshot to a file, overwriting the file if it already exists.
            </summary>
            <param name="fileName">The full path and file name to save the screenshot to.</param>
            <param name="format">A <see cref="T:System.Drawing.Imaging.ImageFormat"/> object indicating the format
            to save the image to.</param>
        </member>
        <member name="M:OpenQA.Selenium.Screenshot.ToString">
            <summary>
            Returns a <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Screenshot.AsBase64EncodedString">
            <summary>
            Gets the value of the screenshot image as a Base64-encoded string.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Screenshot.AsByteArray">
            <summary>
            Gets the value of the screenshot image as an array of bytes.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.StaleElementReferenceException">
            <summary>
            The exception that is thrown when a reference to an element is no longer valid.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.StaleElementReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.StaleElementReferenceException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.UnableToSetCookieException">
            <summary>
            The exception that is thrown when the user is unable to set a cookie.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnableToSetCookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnableToSetCookieException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.UnhandledAlertException">
            <summary>
            The exception that is thrown when an unhandled alert is present.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.UnhandledAlertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.UnhandledAlertException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.WebDriverResult">
            <summary>
            Specifies return values for actions in the driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.Success">
            <summary>
            The action was successful.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.IndexOutOfBounds">
            <summary>
            The index specified for the action was out of the acceptable range.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoCollection">
            <summary>
            No collection was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoString">
            <summary>
            No string was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoStringLength">
            <summary>
            No string length was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoStringWrapper">
            <summary>
            No string wrapper was specified.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchDriver">
            <summary>
            No driver matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchElement">
            <summary>
            No element matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchFrame">
            <summary>
            No frame matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnknownCommand">
            <summary>
            The functionality is not supported.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ObsoleteElement">
            <summary>
            The specified element is no longer valid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotDisplayed">
            <summary>
            The specified element is not displayed.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidElementState">
            <summary>
            The specified element is not enabled.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnhandledError">
            <summary>
            An unhandled error occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ExpectedError">
            <summary>
            An error occurred, but it was expected.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.ElementNotSelectable">
            <summary>
            The specified element is not selected.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchDocument">
            <summary>
            No document matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnexpectedJavaScriptError">
            <summary>
            An unexpected JavaScript error occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoScriptResult">
            <summary>
            No result is available from the JavaScript execution.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.XPathLookupError">
            <summary>
            The result from the JavaScript execution is not recognized.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchCollection">
            <summary>
            No collection matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.Timeout">
            <summary>
            A timeout occurred.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NullPointer">
            <summary>
            A null pointer was received.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoSuchWindow">
            <summary>
            No window matching the criteria exists.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidCookieDomain">
            <summary>
            An illegal attempt was made to set a cookie under a different domain than the current page.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnableToSetCookie">
            <summary>
            A request to set a cookie's value could not be satisfied.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.UnexpectedAlertOpen">
            <summary>
            An alert was found open unexpectedly.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.NoAlertPresent">
            <summary>
            A request was made to switch to an alert, but no alert is currently open.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.AsyncScriptTimeout">
            <summary>
            An asynchronous JavaScript execution timed out.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidElementCoordinates">
            <summary>
            The coordinates of the element are invalid.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.WebDriverResult.InvalidSelector">
            <summary>
            The selector used (CSS/XPath) was invalid.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.XPathLookupException">
            <summary>
            The exception that is thrown when an error occurs during an XPath lookup.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with 
            a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with
            a specified error message and a reference to the inner exception that is the
            cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception,
            or <see langword="null"/> if no inner exception is specified.</param>
        </member>
        <member name="M:OpenQA.Selenium.XPathLookupException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.XPathLookupException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized 
            object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual 
            information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Android.AndroidDriver">
            <summary>
            Provides a mechanism to write tests against an Android device
            </summary>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new AndroidDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                } 
            }
            </code>
            </example>
            <remarks>
            Using the Android driver requires the Android device or emulator
            to be running, and the WebDriver application be active on the device.
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWebDriver">
            <summary>
            Provides a way to use the driver through
            </summary>
            /// <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new RemoteWebDriver(new Uri("http://127.0.0.1:4444/wd/hub"),DesiredCapabilities.InternetExplorer());
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                } 
            }
            </code>
            </example>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsById">
            <summary>
            Defines the interface through which the user finds elements by their ID.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsById.FindElementById(System.String)">
            <summary>
            Finds the first element matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsById.FindElementsById(System.String)">
            <summary>
            Finds all elements matching the specified id.
            </summary>
            <param name="id">The id to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByClassName">
            <summary>
            Defines the interface through which the user finds elements by their CSS class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByClassName.FindElementByClassName(System.String)">
            <summary>
            Finds the first element matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByClassName.FindElementsByClassName(System.String)">
            <summary>
            Finds all elements matching the specified CSS class.
            </summary>
            <param name="className">The CSS class to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByLinkText">
            <summary>
            Defines the interface through which the user finds elements by their link text.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByLinkText.FindElementByLinkText(System.String)">
            <summary>
            Finds the first element matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByLinkText.FindElementsByLinkText(System.String)">
            <summary>
            Finds all elements matching the specified link text.
            </summary>
            <param name="linkText">The link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByName">
            <summary>
            Defines the interface through which the user finds elements by their name.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByName.FindElementByName(System.String)">
            <summary>
            Finds the first element matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByName.FindElementsByName(System.String)">
            <summary>
            Finds all elements matching the specified name.
            </summary>
            <param name="name">The name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByTagName">
            <summary>
            Defines the interface through which the user finds elements by their tag name.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByTagName.FindElementByTagName(System.String)">
            <summary>
            Finds the first element matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByTagName.FindElementsByTagName(System.String)">
            <summary>
            Finds all elements matching the specified tag name.
            </summary>
            <param name="tagName">The tag name to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByXPath">
            <summary>
            Defines the interface through which the user finds elements by XPath.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByXPath.FindElementByXPath(System.String)">
            <summary>
            Finds the first element matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByXPath.FindElementsByXPath(System.String)">
            <summary>
            Finds all elements matching the specified XPath query.
            </summary>
            <param name="xpath">The XPath query to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByPartialLinkText">
            <summary>
            Defines the interface through which the user finds elements by a partial match on their link text.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByPartialLinkText.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first element matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByPartialLinkText.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds all elements matching the specified partial link text.
            </summary>
            <param name="partialLinkText">The partial link text to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IFindsByCssSelector">
            <summary>
            Defines the interface through which the user finds elements by their cascading stylesheet (CSS) selector.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByCssSelector.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.IFindsByCssSelector.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(OpenQA.Selenium.Remote.ICommandExecutor,OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the RemoteWebDriver class
            </summary>
            <param name="commandExecutor">An <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> object which executes commands for the driver.</param>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the RemoteWebDriver class. This constructor defaults proxy to http://127.0.0.1:4444/wd/hub
            </summary>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(System.Uri,OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the RemoteWebDriver class
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4444/wd/hub).</param>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.#ctor(System.Uri,OpenQA.Selenium.ICapabilities,System.TimeSpan)">
            <summary>
            Initializes a new instance of the RemoteWebDriver class using the specified remote address, desired capabilties, and command timeout.
            </summary>
            <param name="remoteAddress">URI containing the address of the WebDriver remote server (e.g. http://127.0.0.1:4444/wd/hub).</param>
            <param name="desiredCapabilities">An <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired capabilities of the browser.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first element in the page that matches the <see cref="T:OpenQA.Selenium.By"/> object
            </summary>
            <param name="by">By mechanism to find the object</param>
            <returns>IWebElement object so that you can interction that object</returns>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            IWebElement elem = driver.FindElement(By.Name("q"));
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds the elements on the page by using the <see cref="T:OpenQA.Selenium.By"/> object and returns a ReadOnlyCollection of the Elements on the page
            </summary>
            <param name="by">By mechanism to find the element</param>
            <returns>ReadOnlyCollection of IWebElement</returns>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            ReadOnlyCollection<![CDATA[<IWebElement>]]> classList = driver.FindElements(By.ClassName("class"));
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Close">
            <summary>
            Closes the Browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Quit">
            <summary>
            Close the Browser and Dispose of WebDriver
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Manage">
            <summary>
            Method For getting an object to set the Speen
            </summary>
            <returns>Returns an IOptions object that allows the driver to set the speed and cookies and getting cookies</returns>
            <seealso cref="T:OpenQA.Selenium.IOptions"/>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            driver.Manage().GetCookies();
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Navigate">
            <summary>
            Method to allow you to Navigate with WebDriver
            </summary>
            <returns>Returns an INavigation Object that allows the driver to navigate in the browser</returns>
            <example>
            <code>
                IWebDriver driver = new InternetExplorerDriver();
                driver.Navigate().GoToUrl("http://www.google.co.uk");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.SwitchTo">
            <summary>
            Method to give you access to switch frames and windows
            </summary>
            <returns>Returns an Object that allows you to Switch Frames and Windows</returns>
            <example>
            <code>
            IWebDriver driver = new InternetExplorerDriver();
            driver.SwitchTo().Frame("FrameName");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript in the context of the currently selected frame or window
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.ExecuteAsyncScript(System.String,System.Object[])">
            <summary>
            Executes JavaScript asynchronously in the context of the currently selected frame or window.
            </summary>
            <param name="script">The JavaScript code to execute.</param>
            <param name="args">The arguments to the script.</param>
            <returns>The value returned by the script.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the element</param>
            <returns>IWebElement object so that you can interction that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the Element</param>
            <returns>ReadOnlyCollection of Elements that match the object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByClassName(System.String)">
            <summary>
            Finds the first element in the page that matches the CSS Class supplied
            </summary>
            <param name="className">className of the</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByClassName(System.String)">
            <summary>
            Finds a list of elements that match the classname supplied
            </summary>
            <param name="className">CSS class Name on the element</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element </param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByLinkText("linktext")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByLinkText(System.String)">
            <summary>
            Finds a list of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element</param>
            <returns>ReadOnlyCollection<![CDATA[<IWebElement>]]> object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first of elements that match the part of the link text supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByPartialLinkText("partOfLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds a list of elements that match the classname supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>ReadOnlyCollection<![CDATA[<IWebElement>]]> objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByPartialLinkText("partOfTheLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByName(System.String)">
            <summary>
            Finds the first of elements that match the name supplied
            </summary>
            <param name="name">Name of the element on the page</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByName(System.String)">
            <summary>
            Finds a list of elements that match the name supplied
            </summary>
            <param name="name">Name of element</param>
            <returns>ReadOnlyCollect of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByTagName(System.String)">
            <summary>
            Finds the first of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM tag Name of the element being searched</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByTagName(System.String)">
            <summary>
            Finds a list of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM tag Name of element being searched</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByXPath(System.String)">
            <summary>
            Finds the first of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByXPath("//table/tbody/tr/td/a");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByXPath(System.String)">
            <summary>
            Finds a list of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByXpath("//tr/td/a")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Dispose">
            <summary>
            Dispose the RemoteWebDriver Instance
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes commands with the driver 
            </summary>
            <param name="driverCommandToExecute">Command that needs executing</param>
            <param name="parameters">Parameters needed for the command</param>
            <returns>WebDriver Response</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetElementFromResponse(OpenQA.Selenium.Remote.Response)">
            <summary>
            Find the element in the response
            </summary>
            <param name="response">Reponse from the browser</param>
            <returns>Element from the page</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.GetElementsFromResponse(OpenQA.Selenium.Remote.Response)">
            <summary>
            Finds the elements that are in the response
            </summary>
            <param name="response">Response from the browser</param>
            <returns>Collection of elements</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Dispose(System.Boolean)">
            <summary>
            Stops the client from running
            </summary>
            <param name="disposing">if its in the process of disposing</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(OpenQA.Selenium.ICapabilities)">
            <summary>
            Starts a session with the driver
            </summary>
            <param name="desiredCapabilities">Capabilities of the browser</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a command with this driver .
            </summary>
            <param name="driverCommandToExecute">A <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/> value representing the command to execute.</param>
            <param name="parameters">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the names and values of the parameters of the command.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.Response"/> containing information about the success or failure of the command and any data returned by the command.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.StartClient">
            <summary>
            Starts the command executor, enabling communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.StopClient">
            <summary>
            Stops the command executor, ending further communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(System.String,System.String)">
            <summary>
            Finds an element matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the element.</param>
            <param name="value">The value to use to search for the element.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.FindElements(System.String,System.String)">
            <summary>
            Finds all elements matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the elements.</param>
            <param name="value">The value to use to search for the elements.</param>
            <returns>A collection of all of the <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matchings the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebDriver.CreateElement(System.String)">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> with the specified ID.
            </summary>
            <param name="elementId">The ID of this element.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> with the specified ID.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Url">
            <summary>
            Gets or sets the URL the browser is currently displaying.
            </summary>
            <seealso cref="P:OpenQA.Selenium.IWebDriver.Url"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.String)"/>
            <seealso cref="M:OpenQA.Selenium.INavigation.GoToUrl(System.Uri)"/>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Title">
            <summary>
            Gets the title of the current browser window.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.PageSource">
            <summary>
            Gets the source of the page last loaded by the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.CurrentWindowHandle">
            <summary>
            Gets the current window handle, which is an opaque handle to this 
            window that uniquely identifies it within this driver instance.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.WindowHandles">
            <summary>
            Gets the window handles of open browser windows.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Keyboard">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IKeyboard"/> object for sending keystrokes to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Mouse">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.IMouse"/> object for sending mouse commands to the browser.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.Capabilities">
            <summary>
            Gets the capabilities that the RemoteWebDriver instance is currently using
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.CommandExecutor">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Remote.ICommandExecutor"/> which executes commands for this driver.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebDriver.SessionId">
            <summary>
            Gets the <see cref="P:OpenQA.Selenium.Remote.RemoteWebDriver.SessionId"/> for the current session of this driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Android.AndroidDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Android.AndroidDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Android.AndroidDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Android.AndroidDriver"/> class,
            communicating with the device at a specific URL.
            </summary>
            <param name="remoteAddress">The URL of the WebDriver application on the Android device.</param>
        </member>
        <member name="M:OpenQA.Selenium.Android.AndroidDriver.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Android.AndroidDriver"/> class,
            communicating with the device at a specific URL.
            </summary>
            <param name="remoteAddress">The URL of the WebDriver application on the Android device.</param>
        </member>
        <member name="M:OpenQA.Selenium.Android.AndroidDriver.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Android.AndroidDriver.Orientation">
            <summary>
            Gets or sets the screen orientation of the browser on the device.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeCommandExecutor">
            <summary>
            Provides a mechanism to execute commands on the browser
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.HttpCommandExecutor">
            <summary>
            Provides a way of executing Commands over HTTP
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ICommandExecutor">
            <summary>
            Provides a way to send commands to the remote server
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ICommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.#ctor(System.Uri,System.TimeSpan)">
            <summary>
            Initializes a new instance of the HttpCommandExecutor class
            </summary>
            <param name="addressOfRemoteServer">Address of the WebDriver Server</param>
            <param name="timeout">The timeout within which the server must respond.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeCommandExecutor.#ctor(OpenQA.Selenium.Chrome.ChromeDriverService,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Chrome.ChromeCommandExecutor"/> class.
            </summary>
            <param name="driverService">The <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> that drives the browser.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command with the ChromeDriver.
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeDriver">
            <summary>
            Provides a mechanism to write tests against Chrome
            </summary>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new ChromeDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                } 
            }
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Chrome.ChromeDriver.AcceptUntrustedCertificates">
            <summary>
            Accept untrusted SSL Certificates
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor">
            <summary>
            Initializes a new instance of the ChromeDriver class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ChromeDriver class using the specified path to the directory containing ChromeDriver.exe.
            </summary>
            <param name="chromeDriverDirectory">The full path to the directory containing ChromeDriver.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(OpenQA.Selenium.Chrome.ChromeOptions)">
            <summary>
            Initializes a new instance of the ChromeDriver class using the specified options.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(System.String,OpenQA.Selenium.Chrome.ChromeOptions)">
            <summary>
            Initializes a new instance of the ChromeDriver class using the specified path to the directory containing ChromeDriver.exe and options.
            </summary>
            <param name="chromeDriverDirectory">The full path to the directory containing ChromeDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(System.String,OpenQA.Selenium.Chrome.ChromeOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the ChromeDriver class using the specified path to the directory containing ChromeDriver.exe, command timeout, and options.
            </summary>
            <param name="chromeDriverDirectory">The full path to the directory containing ChromeDriver.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.#ctor(OpenQA.Selenium.DriverService,OpenQA.Selenium.Chrome.ChromeOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the ChromeDriver class using the specified <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/>.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.Chrome.ChromeDriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.Chrome.ChromeOptions"/> to be used with the Chrome driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriver.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeDriverService">
            <summary>
            Exposes the service provided by the native ChromeDriver executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the ChromeDriverService class.
            </summary>
            <param name="executable">The full path to the ChromeDriver executable.</param>
            <param name="port">The port on which the ChromeDriver executable should listen.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the ChromeDriverService.
            </summary>
            <returns>A ChromeDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the ChromeDriverService using a specified path to the ChromeDriver executable.
            </summary>
            <param name="driverPath">The directory containing the ChromeDriver executable.</param>
            <returns>A ChromeDriverService using a random port.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeDriverService.DriverServiceExecutableName">
            <summary>
            Gets the executable file name of the driver service.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.Chrome.ChromeDriver"/>
            </summary>
            <remarks>
            Used with ChromeDriver.exe v17.0.963.0 and higher.
            </remarks>
            <example>
            <code>
            ChromeOptions options = new ChromeOptions();
            options.AddExtensions("\path\to\extension.crx");
            options.BinaryLocation = "\path\to\chrome";
            </code>
            <para></para>
            <para>For use with ChromeDriver:</para>
            <para></para>
            <code>
            ChromeDriver driver = new ChromeDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            DesiredCapabilities capabilities = DesiredCapabilities.Chrome();
            capabilities.SetCapability(ChromeOptions.Capability, options);
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), capabilities);
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Chrome.ChromeOptions.Capability">
            <summary>
            Gets the name of the capability used to store Chrome options in
            a <see cref="T:OpenQA.Selenium.Remote.DesiredCapabilities"/> object.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddArgument(System.String)">
            <summary>
            Adds a single argument to the list of arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="argument">The argument to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddArguments(System.String[])">
            <summary>
            Adds arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="arguments">An array of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds arguments to be appended to the Chrome.exe command line.
            </summary>
            <param name="arguments">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> object of arguments to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExtension(System.String)">
            <summary>
            Adds a path to a packed Chrome extension (.crx file) to the list of extensions 
            to be installed in the instance of Chrome.
            </summary>
            <param name="pathToExtension">The full path to the extension to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExtensions(System.String[])">
            <summary>
            Adds a list of paths to packed Chrome extensions (.crx files) to be installed
            in the instance of Chrome.
            </summary>
            <param name="extensions">An array of full paths to the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.AddExtensions(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a list of paths to packed Chrome extensions (.crx files) to be installed
            in the instance of Chrome.
            </summary>
            <param name="extensions">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of full paths to the extensions to add.</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabiliites for Chrome with these options included as
            capabilities. This does not copy the options. Further changes will be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for Chrome with these options.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.BinaryLocation">
            <summary>
            Gets or sets the location of the Chrome browser's binary executable file.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.Arguments">
            <summary>
            Gets the list of arguments appended to the Chrome command line as a string array.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Chrome.ChromeOptions.Extensions">
            <summary>
            Gets the list of extensions to be installed as an array of base64-encoded strings.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Chrome.ChromeWebElement">
            <summary>
            Provides a mechanism to get elements off the page for test
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWebElement">
            <summary>
            RemoteWebElement allows you to have access to specific items that are found on the page
            </summary>
            <seealso cref="T:OpenQA.Selenium.IWebElement"/>
            <seealso cref="T:OpenQA.Selenium.ILocatable"/>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWrapsDriver">
            <summary>
            Defines the interface through which the user can access the driver used to find an element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWrapsDriver.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver"/> used to find this element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> class.
            </summary>
            <param name="parentDriver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> instance hosting this element.</param>
            <param name="id">The ID assigned to the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Clear">
            <summary>
            Clears the content of this element.
            </summary>
            <remarks>If this element is a text entry element, the <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.Clear"/>
            method will clear the value. It has no effect on other elements. Text entry elements 
            are defined as elements with INPUT or TEXTAREA tags.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.SendKeys(System.String)">
            <summary>
            Simulates typing text into the element.
            </summary>
            <param name="text">The text to type into the element.</param>
            <remarks>The text to be typed may include special characters like arrow keys,
            backspaces, function keys, and so on. Valid special keys are defined in 
            <see cref="T:OpenQA.Selenium.Keys"/>.</remarks>
            <seealso cref="T:OpenQA.Selenium.Keys"/>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Thrown when the target element is not enabled.</exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Submit">
            <summary>
            Submits this element to the web server.
            </summary>
            <remarks>If this current element is a form, or an element within a form, 
            then this will be submitted to the web server. If this causes the current 
            page to change, then this method will attempt to block until the new page
            is loaded.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Click">
            <summary>
            Clicks this element. 
            </summary>
            <remarks>
            Click this element. If the click causes a new page to load, the <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.Click"/> 
            method will attempt to block until the page has loaded. After calling the 
            <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.Click"/> method, you should discard all references to this 
            element unless you know that the element and the page will still be present. 
            Otherwise, any further operations performed on this element will have an undefined
            behavior.
            </remarks>
            <exception cref="T:OpenQA.Selenium.InvalidElementStateException">Thrown when the target element is not enabled.</exception>
            <exception cref="T:OpenQA.Selenium.ElementNotVisibleException">Thrown when the target element is not visible.</exception>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetAttribute(System.String)">
            <summary>
            Gets the value of the specified attribute for this element.
            </summary>
            <param name="attributeName">The name of the attribute.</param>
            <returns>The attribute's current value. Returns a <see langword="null"/> if the 
            value is not set.</returns>
            <remarks>The <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.GetAttribute(System.String)"/> method will return the current value
            of the attribute, even if the value has been modified after the page has been 
            loaded. Note that the value of the following attributes will be returned even if 
            there is no explicit attribute on the element:
            <list type="table">
            <listheader>
            <term>Attribute name</term>
            <term>Value returned if not explicitly specified</term>
            <term>Valid element types</term>
            </listheader>
            <item>
            <description>checked</description>
            <description>checked</description>
            <description>Check Box</description>
            </item>
            <item>
            <description>selected</description>
            <description>selected</description>
            <description>Options in Select elements</description>
            </item>
            <item>
            <description>disabled</description>
            <description>disabled</description>
            <description>Input and other UI elements</description>
            </item>
            </list>
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetCssValue(System.String)">
            <summary>
            Gets the value of a CSS property of this element.
            </summary>
            <param name="propertyName">The name of the CSS property to get the value of.</param>
            <returns>The value of the specified CSS property.</returns>
            <remarks>The value returned by the <see cref="M:OpenQA.Selenium.Remote.RemoteWebElement.GetCssValue(System.String)"/>
            method is likely to be unpredictable in a cross-browser environment. 
            Color values should be returned as hex strings. For example, a 
            "background-color" property set as "green" in the HTML source, will
            return "#008000" for its value.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElements(OpenQA.Selenium.By)">
            <summary>
            Finds all <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> within the current context 
            using the given mechanism.
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of all <see cref="T:OpenQA.Selenium.IWebElement">WebElements</see>
            matching the current criteria, or an empty list if nothing matches.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElement(OpenQA.Selenium.By)">
            <summary>
            Finds the first <see cref="T:OpenQA.Selenium.IWebElement"/> using the given method. 
            </summary>
            <param name="by">The locating mechanism to use.</param>
            <returns>The first matching <see cref="T:OpenQA.Selenium.IWebElement"/> on the current context.</returns>
            <exception cref="T:OpenQA.Selenium.NoSuchElementException">If no element matches the criteria.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element </param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementByLinkText("linktext")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByLinkText(System.String)">
            <summary>
            Finds the first of elements that match the link text supplied
            </summary>
            <param name="linkText">Link text of element </param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByLinkText("linktext")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the element</param>
            <returns>IWebElement object so that you can interction that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsById(System.String)">
            <summary>
            Finds the first element in the page that matches the ID supplied
            </summary>
            <param name="id">ID of the Element</param>
            <returns>ReadOnlyCollection of Elements that match the object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsById("id")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByName(System.String)">
            <summary>
            Finds the first of elements that match the name supplied
            </summary>
            <param name="name">Name of the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByName(System.String)">
            <summary>
            Finds a list of elements that match the name supplied
            </summary>
            <param name="name">Name of element</param>
            <returns>ReadOnlyCollect of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByName("name")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByTagName(System.String)">
            <summary>
            Finds the first of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">tag name of the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByTagName(System.String)">
            <summary>
            Finds a list of elements that match the DOM Tag supplied
            </summary>
            <param name="tagName">DOM Tag of the element on the page</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByTagName("tag")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByClassName(System.String)">
            <summary>
            Finds the first element in the page that matches the CSS Class supplied
            </summary>
            <param name="className">className of the</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByClassName(System.String)">
            <summary>
            Finds a list of elements that match the classname supplied
            </summary>
            <param name="className">CSS class name of the elements on the page</param>
            <returns>ReadOnlyCollection of IWebElement object so that you can interact with those objects</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByClassName("classname")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByXPath(System.String)">
            <summary>
            Finds the first of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to the element</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByXPath("//table/tbody/tr/td/a");
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByXPath(System.String)">
            <summary>
            Finds a list of elements that match the XPath supplied
            </summary>
            <param name="xpath">xpath to element on the page</param>
            <returns>ReadOnlyCollection of IWebElement objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByXpath("//tr/td/a")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByPartialLinkText(System.String)">
            <summary>
            Finds the first of elements that match the part of the link text supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>IWebElement object so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            IWebElement elem = driver.FindElementsByPartialLinkText("partOfLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByPartialLinkText(System.String)">
            <summary>
            Finds a list of elements that match the classname supplied
            </summary>
            <param name="partialLinkText">part of the link text</param>
            <returns>ReadOnlyCollection<![CDATA[<IWebElement>]]> objects so that you can interact that object</returns>
            <example>
            <code>
            IWebDriver driver = new RemoteWebDriver(DesiredCapabilities.Firefox());
            ReadOnlyCollection<![CDATA[<IWebElement>]]> elem = driver.FindElementsByPartialLinkText("partOfTheLink")
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementByCssSelector(System.String)">
            <summary>
            Finds the first element matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The id to match.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByCssSelector(System.String)">
            <summary>
            Finds all elements matching the specified CSS selector.
            </summary>
            <param name="cssSelector">The CSS selector to match.</param>
            <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing all
            <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matching the criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.GetHashCode">
            <summary>
            Method to get the hash code of the element
            </summary>
            <returns>Interger of the hash code for the element</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Equals(System.Object)">
            <summary>
            Compares if two elements are equal
            </summary>
            <param name="obj">Object to compare against</param>
            <returns>A boolean if it is equal or not</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElement(System.String,System.String)">
            <summary>
            Finds a child element matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the element.</param>
            <param name="value">The value to use to search for the element.</param>
            <returns>The first <see cref="T:OpenQA.Selenium.IWebElement"/> matching the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.FindElements(System.String,System.String)">
            <summary>
            Finds all child elements matching the given mechanism and value.
            </summary>
            <param name="mechanism">The mechanism by which to find the elements.</param>
            <param name="value">The value to use to search for the elements.</param>
            <returns>A collection of all of the <see cref="T:OpenQA.Selenium.IWebElement">IWebElements</see> matchings the given criteria.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWebElement.Execute(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Executes a command on this element using the specified parameters.
            </summary>
            <param name="commandToExecute">The <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/> to execute against this element.</param>
            <param name="parameters">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing names and values of the parameters for the command.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Remote.Response"/> object containing the result of the command execution.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.WrappedDriver">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebDriver"/> used to find this element.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.TagName">
            <summary>
            Gets the tag name of this element.
            </summary>
            <remarks>
            The <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.TagName"/> property returns the tag name of the
            element, not the value of the name attribute. For example, it will return
            "input" for an element specifiedby the HTML markup &lt;input name="foo" /&gt;. 
            </remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Text">
            <summary>
            Gets the innerText of this element, without any leading or trailing whitespace,
            and with other whitespace collapsed.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Enabled">
            <summary>
            Gets a value indicating whether or not this element is enabled.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.Enabled"/> property will generally 
            return <see langword="true"/> for everything except explicitly disabled input elements.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Selected">
            <summary>
            Gets a value indicating whether or not this element is selected.
            </summary>
            <remarks>This operation only applies to input elements such as checkboxes,
            options in a select element and radio buttons.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Location">
            <summary>
            Gets a <see cref="T:System.Drawing.Point"/> object containgin the coordinates of the upper-left corner
            of this element relative to the upper-left corner of the page.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Size">
            <summary>
            Gets a <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.Size"/> object containing the height and width of this element.
            </summary>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Displayed">
            <summary>
            Gets a value indicating whether or not this element is displayed.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.Remote.RemoteWebElement.Displayed"/> property avoids the problem 
            of having to parse an element's "style" attribute to determine
            visibility of an element.</remarks>
            <exception cref="T:OpenQA.Selenium.StaleElementReferenceException">Thrown when the target element is no longer valid in the document DOM.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.LocationOnScreenOnceScrolledIntoView">
            <summary>
            Gets the point where the element would be when scrolled into view.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Coordinates">
            <summary>
            Gets the coordinates identifying the location of this element using
            various frames of reference.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.InternalElementId">
            <summary>
            Gets the ID of the element.
            </summary>
            <remarks>This property is internal to the WebDriver instance, and is
            not intended to be used in your code. The element's ID has no meaning
            outside of internal WebDriver usage, so it would be improper to scope
            it as public. However, both subclasses of <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/>
            and the parent driver hosting the element have a need to access the
            internal element ID. Therefore, we have two properties returning the
            same value, one scoped as internal, the other as protected.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWebElement.Id">
            <summary>
            Gets the ID of the element
            </summary>
            <remarks>This property is internal to the WebDriver instance, and is
            not intended to be used in your code. The element's ID has no meaning
            outside of internal WebDriver usage, so it would be improper to scope
            it as public. However, both subclasses of <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/>
            and the parent driver hosting the element have a need to access the
            internal element ID. Therefore, we have two properties returning the
            same value, one scoped as internal, the other as protected.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeWebElement.#ctor(OpenQA.Selenium.Chrome.ChromeDriver,System.String)">
            <summary>
            Initializes a new instance of the ChromeWebElement class
            </summary>
            <param name="parent">Driver in use</param>
            <param name="elementId">Id of the element</param>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeWebElement.GetHashCode">
            <summary>
            Returns the HashCode of the Element
            </summary>
            <returns>Hashcode of the element</returns>
        </member>
        <member name="M:OpenQA.Selenium.Chrome.ChromeWebElement.Equals(System.Object)">
            <summary>
            Compares current element against another
            </summary>
            <param name="obj">element to compare against</param>
            <returns>A value indicating whether they are the same</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxBinary">
            <summary>
            Represents the binary associated with Firefox.
            </summary>
            <remarks>The <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> class is responsible for instantiating the
            Firefox process, and the operating system environment in which it runs.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> class located at a specific file location.
            </summary>
            <param name="pathToFirefoxBinary">Full path and file name to the Firefox executable.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.StartProfile(OpenQA.Selenium.Firefox.FirefoxProfile,System.String[])">
            <summary>
            Starts Firefox using the specified profile and command-line arguments.
            </summary>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> to use with this instance of Firefox.</param>
            <param name="commandLineArguments">The command-line arguments to use in starting Firefox.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.SetEnvironmentProperty(System.String,System.String)">
            <summary>
            Sets a variable to be used in the Firefox execution environment.
            </summary>
            <param name="propertyName">The name of the environment variable to set.</param>
            <param name="value">The value of the environment variable to set.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.CreateProfile(System.String)">
            <summary>
            Creates a named profile for Firefox.
            </summary>
            <param name="profileName">The name of the profile to create.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.WaitForProcessExit">
            <summary>
            Waits for the process to complete execution.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.Clean(OpenQA.Selenium.Firefox.FirefoxProfile)">
            <summary>
            Intializes the binary with the specified profile.
            </summary>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> to use to initialize the binary.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.Quit">
            <summary>
            Stops the execution of this <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/>, terminating the process if necessary.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.ToString">
            <summary>
            Returns a <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.
            </summary>
            <returns>A <see cref="T:System.String">String</see> that represents the current <see cref="T:System.Object">Object</see>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxBinary.StartFirefoxProcess(System.Diagnostics.Process)">
            <summary>
            Starts the Firefox process.
            </summary>
            <param name="builder">A <see cref="T:System.Diagnostics.Process"/> object used to start Firefox.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.TimeoutInMilliseconds">
            <summary>
            Gets or sets the timeout (in milliseconds) to wait for command execution.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.ConsoleOutput">
            <summary>
            Gets all console output of the binary.
            </summary>
            <remarks>Output retrieval is non-destructive and non-blocking.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.BinaryExecutable">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Firefox.Internal.Executable"/> associated with this <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/>.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.IsOnLinux">
            <summary>
            Gets a value indicating whether the current operating system is Linux.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxBinary.ExtraEnvironmentVariables">
            <summary>
            Gets a <see cref="T:System.Collections.Generic.Dictionary`2"/> containing string key-value pairs
            representing any operating system environment variables beyond the defaults.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxDriver">
            <summary>
            Provides a way to access Firefox to run tests.
            </summary>
            <remarks>
            When the FirefoxDriver object has been instantiated the browser will load. The test can then navigate to the URL under test and 
            start your test.
            <para>
            In the case of the FirefoxDriver, you can specify a named profile to be used, or you can let the
            driver create a temporary, anonymous profile. A custom extension allowing the driver to communicate
            to the browser will be installed into the profile.
            </para>
            </remarks>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new FirefoxDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                } 
            }
            </code>
            </example>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.ProfileCapabilityName">
            <summary>
            The name of the ICapabilities setting to use to define a custom Firefox profile.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.BinaryCapabilityName">
            <summary>
            The name of the ICapabilities setting to use to define a custom location for the
            Firefox executable.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.DefaultPort">
            <summary>
            The default port on which to communicate with the Firefox extension.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.DefaultEnableNativeEvents">
            <summary>
            Indicates whether native events is enabled by default for this platform.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Firefox.FirefoxDriver.AcceptUntrustedCertificates">
            <summary>
            Indicates whether the driver will accept untrusted SSL certificates.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxProfile)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class for a given profile.
            </summary>
            <param name="profile">A <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> object representing the profile settings
            to be used in starting Firefox.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.ICapabilities)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class for a given set of capabilities.
            </summary>
            <param name="capabilities">The <see cref="T:OpenQA.Selenium.ICapabilities"/> object containing the desired
            capabilities of this FirefoxDriver.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxBinary,OpenQA.Selenium.Firefox.FirefoxProfile)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class for a given profile and binary environment.
            </summary>
            <param name="binary">A <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> object representing the operating system 
            environmental settings used when running Firefox.</param>
            <param name="profile">A <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> object representing the profile settings
            to be used in starting Firefox.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.#ctor(OpenQA.Selenium.Firefox.FirefoxBinary,OpenQA.Selenium.Firefox.FirefoxProfile,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> class for a given profile, binary environment, and timeout value.
            </summary>
            <param name="binary">A <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> object representing the operating system 
            environmental settings used when running Firefox.</param>
            <param name="profile">A <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> object representing the profile settings
            to be used in starting Firefox.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.StartClient">
            <summary>
            Starts the command executor, enabling communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.StopClient">
            <summary>
            Stops the command executor, ending further communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.PrepareEnvironment">
            <summary>
            In derived classes, the <see cref="M:OpenQA.Selenium.Firefox.FirefoxDriver.PrepareEnvironment"/> method prepares the environment for test execution.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxDriver.CreateElement(System.String)">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> with the specified ID.
            </summary>
            <param name="elementId">The ID of this element.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> with the specified ID. For the FirefoxDriver this will be a <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriver.Binary">
            <summary>
            Gets the FirefoxBinary and its details for subclasses
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxDriver.Profile">
            <summary>
            Gets the FirefoxProfile that is currently in use by subclasses
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxExtension">
            <summary>
            Provides the ability to install extensions into a <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxExtension.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxExtension"/> class.
            </summary>
            <param name="fileName">The name of the file containing the Firefox extension.</param>
            <remarks>WebDriver attempts to resolve the <paramref name="fileName"/> parameter
            by looking first for the specified file in the directory of the calling assembly,
            then using the full path to the file, if a full path is provided.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxExtension.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxExtension"/> class.
            </summary>
            <param name="fileName">The name of the file containing the Firefox extension.</param>
            <param name="resourceId">The ID of the resource within the assembly containing the extension
            if the file is not present in the file system.</param>
            <remarks>WebDriver attempts to resolve the <paramref name="fileName"/> parameter
            by looking first for the specified file in the directory of the calling assembly,
            then using the full path to the file, if a full path is provided. If the file is
            not found in the file system, WebDriver attempts to locate a resource in the
            executing assembly with the name specified by the <paramref name="resourceId"/>
            parameter.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxExtension.Install(System.String)">
            <summary>
            Installs the extension into a profile directory.
            </summary>
            <param name="profileDir">The Firefox profile directory into which to install the extension.</param>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxProfile">
            <summary>
            Provides the ability to edit the preferences associated with a Firefox profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> class using a 
            specific profile directory.
            </summary>
            <param name="profileDirectory">The directory containing the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> class using a 
            specific profile directory.
            </summary>
            <param name="profileDirectory">The directory containing the profile.</param>
            <param name="deleteSourceOnClean">Delete the source directory of the profile upon cleaning.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.FromBase64String(System.String)">
            <summary>
            Converts a base64-encoded string into a <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/>.
            </summary>
            <param name="base64">The base64-encoded string containing the profile contents.</param>
            <returns>The constructed <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.AddExtension(System.String)">
            <summary>
            Adds a Firefox Extension to this profile
            </summary>
            <param name="extensionToInstall">The path to the new extension</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetPreference(System.String,System.String)">
            <summary>
            Sets a preference in the profile.
            </summary>
            <param name="name">The name of the preference to add.</param>
            <param name="value">A <see cref="T:System.String"/> value to add to the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetPreference(System.String,System.Int32)">
            <summary>
            Sets a preference in the profile.
            </summary>
            <param name="name">The name of the preference to add.</param>
            <param name="value">A <see cref="T:System.Int32"/> value to add to the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetPreference(System.String,System.Boolean)">
            <summary>
            Sets a preference in the profile.
            </summary>
            <param name="name">The name of the preference to add.</param>
            <param name="value">A <see cref="T:System.Boolean"/> value to add to the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetProxyPreferences(OpenQA.Selenium.Proxy)">
            <summary>
            Set proxy preferences for this profile.
            </summary>
            <param name="proxy">The <see cref="T:OpenQA.Selenium.Proxy"/> object defining the proxy 
            preferences for the profile.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.WriteToDisk">
            <summary>
            Writes this in-memory representation of a profile to disk.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.Clean">
            <summary>
            Cleans this Firefox profile.
            </summary>
            <remarks>If this profile is a named profile that existed prior to
            launching Firefox, the <see cref="M:OpenQA.Selenium.Firefox.FirefoxProfile.Clean"/> method removes the WebDriver
            Firefox extension. If the profile is an anonymous profile, the profile
            is deleted.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.ToBase64String">
            <summary>
            Converts the profile into a base64-encoded string.
            </summary>
            <returns>A base64-encoded string containing the contents of the profile.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.AddWebDriverExtension">
            <summary>
            Adds the WebDriver extension for Firefox to the profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.AddDefaultPreference(System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            Adds a preference to the profile.
            </summary>
            <param name="preferences">The preferences dictionary.</param>
            <param name="name">The name of the preference.</param>
            <param name="value">The value of the preference.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.GenerateProfileDirectoryName">
            <summary>
            Generates a random directory name for the profile.
            </summary>
            <returns>A random directory name for the profile.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteLockFiles">
            <summary>
            Deletes the lock files for a profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.InstallExtensions">
            <summary>
            Installs all extensions in the profile in the directory on disk.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteExtensionsCache">
            <summary>
            Deletes the cache of extensions for this profile, if the cache exists.
            </summary>
            <remarks>If the extensions cache does not exist for this profile, the
            <see cref="M:OpenQA.Selenium.Firefox.FirefoxProfile.DeleteExtensionsCache"/> method performs no operations, but 
            succeeds.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.UpdateUserPreferences">
            <summary>
            Writes the user preferences to the profile.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.ReadExistingPreferences">
            <summary>
            Reads the existing preferences from the profile.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/>containing key-value pairs representing the preferences.</returns>
            <remarks>Assumes that we only really care about the preferences, not the comments</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.WriteNewPreferences(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Writes the specified preferences to the user preferences file.
            </summary>
            <param name="preferences">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing key-value pairs
            representing the preferences to write.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfile.SetManualProxyPreference(System.String,System.String)">
            <summary>
            Sets a preference for a manually specified proxy.
            </summary>
            <param name="key">The protocol for which to set the proxy.</param>
            <param name="settingString">The setting for the proxy.</param>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.Port">
            <summary>
            Gets or sets the port on which the profile connects to the WebDriver extension.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.ProfileDirectory">
            <summary>
            Gets the directory containing the profile.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.EnableNativeEvents">
            <summary>
            Gets or sets a value indicating whether native events are enabled.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.AlwaysLoadNoFocusLibrary">
            <summary>
            Gets or sets a value indicating whether to always load the library for allowing Firefox 
            to execute commands without its window having focus.
            </summary>
            <remarks>The <see cref="P:OpenQA.Selenium.Firefox.FirefoxProfile.AlwaysLoadNoFocusLibrary"/> property is only used on Linux.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfile.AcceptUntrustedCertificates">
            <summary>
            Gets or sets a value indicating whether Firefox should accept untrusted certificates.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxProfileManager">
            <summary>
            Allows the user to enumerate and access existing named Firefox profiles.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfileManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfileManager"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxProfileManager.GetProfile(System.String)">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> with a given name.
            </summary>
            <param name="profileName">The name of the profile to get.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> with a given name.
            Returns <see langword="null"/> if no profile with the given name exists.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.FirefoxProfileManager.ExistingProfiles">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile">FirefoxProfiles</see>
            representing the existing named profiles for Firefox.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.FirefoxWebElement">
            <summary>
            Allows the user to control elements on a page in Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxWebElement.#ctor(OpenQA.Selenium.Firefox.FirefoxDriver,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> class.
            </summary>
            <param name="parentDriver">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxDriver"/> instance hosting this element.</param>
            <param name="id">The ID assigned to the element.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxWebElement.Equals(System.Object)">
            <summary>
            Determines whether two <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> instances are equal.
            </summary>
            <param name="obj">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> to compare with the current <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/> is equal to the 
            current <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.FirefoxWebElement.GetHashCode">
            <summary>
            Serves as a hash function for a <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:OpenQA.Selenium.Firefox.FirefoxWebElement"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.IExtensionConnection">
            <summary>
            Defines the interface by which a driver connects to the WebDriver extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.IExtensionConnection.Start">
            <summary>
            Starts the connection to the extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.IExtensionConnection.Quit">
            <summary>
            Closes the connection to the extension.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Preferences">
            <summary>
            Represents the preferences used by a profile in Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.SetPreference(System.String,System.String)">
            <summary>
            Sets a preference.
            </summary>
            <param name="key">The name of the preference to set.</param>
            <param name="value">A <see cref="T:System.String"/> value give the preference.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.SetPreference(System.String,System.Int32)">
            <summary>
            Sets a preference.
            </summary>
            <param name="key">The name of the preference to set.</param>
            <param name="value">A <see cref="T:System.Int32"/> value give the preference.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.SetPreference(System.String,System.Boolean)">
            <summary>
            Sets a preference.
            </summary>
            <param name="key">The name of the preference to set.</param>
            <param name="value">A <see cref="T:System.Boolean"/> value give the preference.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Preferences.AppendPreferencesTo(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Appends this set of preferences to the specified set of preferences.
            </summary>
            <param name="preferencesToAdd">A dictionary containing the preferences to which to
            append these values.</param>
            <remarks>If the preference already exists in <paramref name="preferencesToAdd"/>, 
            the value will be updated.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.Executable">
            <summary>
            Represents the executable file for Firefox.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.Executable"/> class.
            </summary>
            <param name="userSpecifiedBinaryPath">The path and file name to the Firefox executable.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.SetLibraryPath(System.Diagnostics.Process)">
            <summary>
            Sets the library path for the Firefox executable environment.
            </summary>
            <param name="builder">The <see cref="T:System.Diagnostics.Process"/> used to execute the binary.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.LocateFirefoxBinaryFromPlatform">
            <summary>
            Locates the Firefox binary by platform.
            </summary>
            <returns>The full path to the binary.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.GetEnvironmentVariable(System.String,System.String)">
            <summary>
            Retrieves an environment variable
            </summary>
            <param name="name">Name of the variable.</param>
            <param name="defaultValue">Default value of the variable.</param>
            <returns>The value of the variable. If no variable with that name is set, returns the default.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.GetLibraryPathPropertyName">
            <summary>
            Retrieves the platform specific environment property name which contains the library path.
            </summary>
            <returns>The platform specific environment property name which contains the library path.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.Executable.FindBinary(System.String[])">
            <summary>
            Walk a PATH to locate binaries with a specified name. Binaries will be searched for in the
            order they are provided.
            </summary>
            <param name="binaryNames">The binary names to search for.</param>
            <returns>The first binary found matching that name.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.Internal.Executable.ExecutablePath">
            <summary>
            Gets the full path to the executable.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.ExtensionConnection">
            <summary>
            Represents the connection to the WebDriver Firefox extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ExtensionConnection.#ctor(OpenQA.Selenium.Firefox.FirefoxBinary,OpenQA.Selenium.Firefox.FirefoxProfile,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.ExtensionConnection"/> class.
            </summary>
            <param name="binary">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxBinary"/> on which to make the connection.</param>
            <param name="profile">The <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> creating the connection.</param>
            <param name="host">The name of the host on which to connect to the Firefox extension (usually "localhost").</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ExtensionConnection.Start">
            <summary>
            Starts the connection to the extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ExtensionConnection.Quit">
            <summary>
            Closes the connection to the extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ExtensionConnection.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.Internal.ExtensionConnection.Profile">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Firefox.FirefoxProfile"/> associated with this connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.ILock">
            <summary>
            Defines the interface through which the mutex port for establishing communication 
            with the WebDriver extension can be locked.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ILock.LockObject(System.Int64)">
            <summary>
            Locks the mutex port.
            </summary>
            <param name="timeoutInMilliseconds">The amount of time (in milliseconds) to wait for 
            the mutex port to become available.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.ILock.UnlockObject">
            <summary>
            Unlocks the mutex port.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.IniFileReader">
            <summary>
            Parses and reads an INI file.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.IniFileReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.IniFileReader"/> class.
            </summary>
            <param name="fileName">The full path to the .INI file to be read.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.IniFileReader.GetValue(System.String,System.String)">
            <summary>
            Gets a value from the .INI file.
            </summary>
            <param name="sectionName">The section in which to find the key-value pair.</param>
            <param name="valueName">The key of the key-value pair.</param>
            <returns>The value associated with the given section and key.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Firefox.Internal.IniFileReader.SectionNames">
            <summary>
            Gets a <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> containing the names of the sections in the .INI file.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Firefox.Internal.SocketLock">
            <summary>
            Provides a mutex-like lock on a socket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Firefox.Internal.SocketLock"/> class.
            </summary>
            <param name="lockPort">Port to use to acquire the lock.</param>
            <remarks>The <see cref="T:OpenQA.Selenium.Firefox.Internal.SocketLock"/> class will attempt to acquire the
            specified port number, and wait for it to become free.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.LockObject(System.Int64)">
            <summary>
            Locks the mutex port.
            </summary>
            <param name="timeoutInMilliseconds">The amount of time (in milliseconds) to wait for 
            the mutex port to become available.</param>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.UnlockObject">
            <summary>
            Unlocks the mutex port.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Firefox.Internal.SocketLock.Dispose">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.Firefox.Internal.SocketLock"/>
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerDriver">
            <summary>
            Provides a way to access Internet Explorer to run your tests by creating a InternetExplorerDriver instance
            </summary>
            <remarks>
            When the WebDriver object has been instantiated the browser will load. The test can then navigate to the URL under test and 
            start your test.
            </remarks>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new InternetExplorerDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                    driver.Dispose();
                } 
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor">
            <summary>
            Initializes a new instance of the InternetExplorerDriver class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(OpenQA.Selenium.IE.InternetExplorerOptions)">
            <summary>
            Initializes a new instance of the InternetExplorerDriver class with the desired options.
            </summary>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InternetExplorerDriver class using the specified path to the directory containing IEDriverServer.exe.
            </summary>
            <param name="internetExplorerDriverServerDirectory">The full path to the directory containing IEDriverServer.exe.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(System.String,OpenQA.Selenium.IE.InternetExplorerOptions)">
            <summary>
            Initializes a new instance of the InternetExplorerDriver class using the specified path to the directory containing IEDriverServer.exe and command timeout.
            </summary>
            <param name="internetExplorerDriverServerDirectory">The full path to the directory containing IEDriverServer.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(System.String,OpenQA.Selenium.IE.InternetExplorerOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the InternetExplorerDriver class using the specified path to the directory containing IEDriverServer.exe and command timeout.
            </summary>
            <param name="internetExplorerDriverServerDirectory">The full path to the directory containing IEDriverServer.exe.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.#ctor(OpenQA.Selenium.DriverService,OpenQA.Selenium.IE.InternetExplorerOptions,System.TimeSpan)">
            <summary>
            Initializes a new instance of the InternetExplorerDriver class using the specified <see cref="T:OpenQA.Selenium.DriverService"/>.
            </summary>
            <param name="service">The <see cref="T:OpenQA.Selenium.DriverService"/> to use.</param>
            <param name="options">The <see cref="T:OpenQA.Selenium.IE.InternetExplorerOptions"/> used to initialize the driver.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriver.GetScreenshot">
            <summary>
            Gets a <see cref="T:OpenQA.Selenium.Screenshot"/> object representing the image of the page on the screen.
            </summary>
            <returns>A <see cref="T:OpenQA.Selenium.Screenshot"/> object containing the image.</returns>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel">
            <summary>
            Represents the valid values of logging levels available with the IEDriverServer.exe.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Trace">
            <summary>
            Represents the Trace value, the most detailed logging level available.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Debug">
            <summary>
            Represents the Debug value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Info">
            <summary>
            Represents the Info value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Warn">
            <summary>
            Represents the Warn value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Error">
            <summary>
            Represents the Error value
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerDriverLogLevel.Fatal">
            <summary>
            Represents the Fatal value, the least detailed logging level available.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerDriverService">
            <summary>
            Exposes the service provided by the native IEDriverServer executable.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the InternetExplorerDriverService class.
            </summary>
            <param name="executable">The full path to the IEDriverServer executable.</param>
            <param name="port">The port on which the IEDriverServer executable should listen.</param>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService">
            <summary>
            Creates a default instance of the InternetExplorerDriverService.
            </summary>
            <returns>A InternetExplorerDriverService that implements default settings.</returns>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerDriverService.CreateDefaultService(System.String)">
            <summary>
            Creates a default instance of the InternetExplorerDriverService using a specified path to the IEDriverServer executable.
            </summary>
            <param name="driverPath">The directory containing the IEDriverServer executable.</param>
            <returns>A InternetExplorerDriverService using a random port.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.Host">
            <summary>
            Gets or sets the value of the host adapter on which the IEDriverServer should listen for connections.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.LogFile">
            <summary>
            Gets or sets the location of the log file written to by the IEDriverServer.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.LoggingLevel">
            <summary>
            Gets or sets the logging level used by the IEDriverServer.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.DriverServiceExecutableName">
            <summary>
            Gets the executable file name of the driver service.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerDriverService.CommandLineArguments">
            <summary>
            Gets the command-line arguments for the driver service.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior">
            <summary>
            Specifies the scroll behavior of elements scrolled into view in the IE driver.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior.Top">
            <summary>
            Scrolls elements to align with the top of the viewport.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.IE.InternetExplorerElementScrollBehavior.Bottom">
            <summary>
            Scrolls elements to align with the bottom of the viewport.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerOptions">
            <summary>
            Class to manage options specific to <see cref="T:OpenQA.Selenium.IE.InternetExplorerDriver"/>
            </summary>
            <example>
            <code>
            InternetExplorerOptions options = new InternetExplorerOptions();
            options.IntroduceInstabilityByIgnoringProtectedModeSettings = true;
            </code>
            <para></para>
            <para>For use with InternetExplorerDriver:</para>
            <para></para>
            <code>
            InternetExplorerDriver driver = new InternetExplorerDriver(options);
            </code>
            <para></para>
            <para>For use with RemoteWebDriver:</para>
            <para></para>
            <code>
            RemoteWebDriver driver = new RemoteWebDriver(new Uri("http://localhost:4444/wd/hub"), options.ToCapabilities());
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerOptions.ToCapabilities">
            <summary>
            Returns DesiredCapabiliites for IE with these options included as
            capabilities. This copies the options. Further changes will not be
            reflected in the returned capabilities.
            </summary>
            <returns>The DesiredCapabilities for IE with these options.</returns>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.IntroduceInstabilityByIgnoringProtectedModeSettings">
            <summary>
            Gets or sets a value indicating whether to ignore the settings of the Internet Explorer Protected Mode.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.IgnoreZoomLevel">
            <summary>
            Gets or sets a value indicating whether to ignore the zoom level of Internet Explorer .
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.EnableNativeEvents">
            <summary>
            Gets or sets a value indicating whether to use native events in interacting with elements.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.InitialBrowserUrl">
            <summary>
            Gets or sets the initial URL displayed when IE is launched. If not set, the browser launches
            with the internal startup page for the WebDriver server.
            </summary>
            <remarks>
            By setting the  <see cref="P:OpenQA.Selenium.IE.InternetExplorerOptions.IntroduceInstabilityByIgnoringProtectedModeSettings"/> to <see langword="true"/>
            and this property to a correct URL, you can launch IE in the Internet Protected Mode zone. This can be helpful
            to avoid the flakiness introduced by ignoring the Protected Mode settings. Nevertheless, setting Protected Mode
            zone settings to the same value in the IE configuration is the preferred method.
            </remarks>
        </member>
        <member name="P:OpenQA.Selenium.IE.InternetExplorerOptions.ElementScrollBehavior">
            <summary>
            Gets or sets the value for describing how elements are scrolled into view in the IE driver. Defaults
            to scrolling the element to the top of the viewport.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.IE.InternetExplorerWebElement">
            <summary>
            InternetExplorerWebElement allows you to have access to specific items that are found on the page.
            </summary>
            <seealso cref="T:OpenQA.Selenium.IWebElement"/>
            <seealso cref="T:OpenQA.Selenium.ILocatable"/>
            <example>
            <code>
            [Test]
            public void TestGoogle()
            {
                driver = new InternetExplorerDriver();
                InternetExplorerWebElement elem = driver.FindElement(By.Name("q"));
                elem.SendKeys("Cheese please!");
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.IE.InternetExplorerWebElement.#ctor(OpenQA.Selenium.IE.InternetExplorerDriver,System.String)">
            <summary>
            Initializes a new instance of the InternetExplorerWebElement class.
            </summary>
            <param name="parent">Driver in use.</param>
            <param name="id">ID of the element.</param>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Actions">
            <summary>
            Provides a mechanism for building advanced interactions with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.#ctor(OpenQA.Selenium.IWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Actions"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.IWebDriver"/> object on which the actions built will be performed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyDown(System.String)">
            <summary>
            Sends a modifier key down message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyDown(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier key down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyUp(System.String)">
            <summary>
            Sends a modifier key up message to the browser.
            </summary>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.KeyUp(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a modifier up down message to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the key command.</param>
            <param name="theKey">The key to be sent.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
            <exception cref="T:System.ArgumentException">If the key sent is not is not one 
            of <see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, or <see cref="F:OpenQA.Selenium.Keys.Alt"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the browser.
            </summary>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.SendKeys(OpenQA.Selenium.IWebElement,System.String)">
            <summary>
            Sends a sequence of keystrokes to the specified element in the browser.
            </summary>
            <param name="element">The element to which to send the keystrokes.</param>
            <param name="keysToSend">The keystrokes to send to the browser.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ClickAndHold(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks and holds the mouse button down on the specified element.
            </summary>
            <param name="onElement">The element on which to click and hold.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ClickAndHold">
            <summary>
            Clicks and holds the mouse button at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Release(OpenQA.Selenium.IWebElement)">
            <summary>
            Releases the mouse button on the specified element.
            </summary>
            <param name="onElement">The element on which to release the button.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Release">
            <summary>
            Releases the mouse button at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Click(OpenQA.Selenium.IWebElement)">
            <summary>
            Clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Click">
            <summary>
            Clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DoubleClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Double-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to double-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DoubleClick">
            <summary>
            Double-clicks the mouse at the last known mouse coordinates.
            </summary>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveToElement(OpenQA.Selenium.IWebElement)">
            <summary>
            Moves the mouse to the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveToElement(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the top-left corner of the specified element.
            </summary>
            <param name="toElement">The element to which to move the mouse.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.MoveByOffset(System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified offset of the last known mouse coordinates.
            </summary>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.ContextClick(OpenQA.Selenium.IWebElement)">
            <summary>
            Right-clicks the mouse on the specified element.
            </summary>
            <param name="onElement">The element on which to right-click.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DragAndDrop(OpenQA.Selenium.IWebElement,OpenQA.Selenium.IWebElement)">
            <summary>
            Performs a drag-and-drop operation from one element to another.
            </summary>
            <param name="source">The element on which the drag operation is started.</param>
            <param name="target">The element on which the drop is performed.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.DragAndDropToOffset(OpenQA.Selenium.IWebElement,System.Int32,System.Int32)">
            <summary>
            Performs a drag-and-drop operation on one element to a specified offset.
            </summary>
            <param name="source">The element on which the drag operation is started.</param>
            <param name="offsetX">The horizontal offset to which to move the mouse.</param>
            <param name="offsetY">The vertical offset to which to move the mouse.</param>
            <returns>A self-reference to this <see cref="T:OpenQA.Selenium.Interactions.Actions"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Build">
            <summary>
            Builds the sequence of actions.
            </summary>
            <returns>A composite <see cref="T:OpenQA.Selenium.Interactions.IAction"/> which can be used to perform the actions.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.Perform">
            <summary>
            Performs the currently built action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Actions.AddAction(OpenQA.Selenium.Interactions.IAction)">
            <summary>
            Adds an action to current list of actions to be performed.
            </summary>
            <param name="actionToAdd">The <see cref="T:OpenQA.Selenium.Interactions.IAction"/> to be added.</param>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ButtonReleaseAction">
            <summary>
            Defines an action for releasing the currently held mouse button.
            </summary>
            <remarks>
            This action can be called for an element different than the one
            ClickAndHoldAction was called for. However, if this action is 
            performed out of sequence (without holding down the mouse button, 
            for example) the results will be different.
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.MouseAction">
            <summary>
            Defines an action for mouse interaction with the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction">
            <summary>
            Defines an action for keyboard and mouse interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.WebDriverAction.#ctor(OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction"/> class for the given element.
            </summary>
            <param name="actionLocation">An <see cref="T:OpenQA.Selenium.ILocatable"/> object tha provides coordinates for this action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.WebDriverAction.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.WebDriverAction"/> class.
            </summary>
            <remarks>This action will take place in the context of the previous action's coordinates.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.WebDriverAction.ActionTarget">
            <summary>
            Gets the target of the action providing coordinates of the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.MouseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.MouseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="target">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.MouseAction.MoveToLocation">
            <summary>
            Moves the mouse to the location at which to perform the action.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.MouseAction.ActionLocation">
            <summary>
            Gets the coordinates at which to perform the mouse action.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.MouseAction.Mouse">
            <summary>
            Gets the mouse with which to perform the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.IAction">
            <summary>
            Provides methods by which an interaction with the browser can be performed.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.IAction.Perform">
            <summary>
            Performs this action on the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ButtonReleaseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ButtonReleaseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ButtonReleaseAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ClickAction">
            <summary>
            Defines an action for clicking on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ClickAndHoldAction">
            <summary>
            Defines an action for clicking and holding the mouse button on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAndHoldAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ClickAndHoldAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ClickAndHoldAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.CompositeAction">
            <summary>
            Defines an action that consists of a list of other actions to be performed in the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.CompositeAction.AddAction(OpenQA.Selenium.Interactions.IAction)">
            <summary>
            Adds an action to the list of actions to be performed.
            </summary>
            <param name="action">An <see cref="T:OpenQA.Selenium.Interactions.IAction"/> to be appended to the
            list of actions to be performed.</param>
            <returns>A self reference.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.CompositeAction.Perform">
            <summary>
            Performs the actions defined in this list of actions.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.ContextClickAction">
            <summary>
            Defines an action for clicking the secondary mouse button on an element, displaying a context menu.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ContextClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.ContextClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.ContextClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.DoubleClickAction">
            <summary>
            Defines an action for double-clicking on an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleClickAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.DoubleClickAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.DoubleClickAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.ICoordinates">
            <summary>
            Provides location of the element using various frames of reference.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationOnScreen">
            <summary>
            Gets the location of an element in absolute screen coordinates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationInViewport">
            <summary>
            Gets the location of an element relative to the origin of the view port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.LocationInDom">
            <summary>
            Gets the location of an element's position within the HTML DOM.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.ICoordinates.AuxiliaryLocator">
            <summary>
            Gets a locator providing a user-defined location for this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.KeyboardAction">
            <summary>
            Defines an action for keyboard interaction with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.KeyboardAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.KeyboardAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.KeyboardAction.FocusOnElement">
            <summary>
            Focuses on the element on which the action is to be performed.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.KeyboardAction.Keyboard">
            <summary>
            Gets the keyboard with which to perform the action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyDownAction">
            <summary>
            Defines an action for pressing a modifier key (Shift, Alt, or Control) on the keyboard.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.Internal.SingleKeyAction">
            <summary>
            Defines an action for keyboard interaction with the browser using a single modifier key.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.Internal.SingleKeyAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.Internal.SingleKeyAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="P:OpenQA.Selenium.Interactions.Internal.SingleKeyAction.Key">
            <summary>
            Gets the key with which to perform the action.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyDownAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyDownAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyDownAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.KeyUpAction">
            <summary>
            Defines an action for releasing a modifier key (Shift, Alt, or Control) on the keyboard.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyUpAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.KeyUpAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="key">The modifier key (<see cref="F:OpenQA.Selenium.Keys.Shift"/>, <see cref="F:OpenQA.Selenium.Keys.Control"/>, <see cref="F:OpenQA.Selenium.Keys.Alt"/>) to use in the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.KeyUpAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveMouseAction">
            <summary>
            Defines an action for moving the mouse to a specified location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveMouseAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.MoveMouseAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveMouseAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.MoveToOffsetAction">
            <summary>
            Defines an action for moving the mouse to a specified offset from its current location.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveToOffsetAction.#ctor(OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.MoveToOffsetAction"/> class.
            </summary>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> with which the action will be performed.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> describing an element at which to perform the action.</param>
            <param name="offsetX">The horizontal offset from the origin of the target to which to move the mouse.</param>
            <param name="offsetY">The vertical offset from the origin of the target to which to move the mouse.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.MoveToOffsetAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Interactions.SendKeysAction">
            <summary>
            Defines an action for sending a sequence of keystrokes to an element.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SendKeysAction.#ctor(OpenQA.Selenium.IKeyboard,OpenQA.Selenium.IMouse,OpenQA.Selenium.ILocatable,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Interactions.SendKeysAction"/> class.
            </summary>
            <param name="keyboard">The <see cref="T:OpenQA.Selenium.IKeyboard"/> to use in performing the action.</param>
            <param name="mouse">The <see cref="T:OpenQA.Selenium.IMouse"/> to use in setting focus to the element on which to perform the action.</param>
            <param name="actionTarget">An <see cref="T:OpenQA.Selenium.ILocatable"/> object providing the element on which to perform the action.</param>
            <param name="keysToSend">The key sequence to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Interactions.SendKeysAction.Perform">
            <summary>
            Performs this action.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor">
            <summary>
            Utility class used to execute "asynchronous" scripts. This class should
            only be used by browsers that do not natively support asynchronous
            script execution.
            <para>Warning: this class is intended for internal use
            only. This class will be removed without warning after all
            native asynchronous implemenations have been completed.
            </para>
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.#ctor(OpenQA.Selenium.IJavaScriptExecutor)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor"/> class.
            </summary>
            <param name="executor">An <see cref="T:OpenQA.Selenium.IJavaScriptExecutor"/> object capable of executing JavaScript.</param>
        </member>
        <member name="M:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.ExecuteScript(System.String,System.Object[])">
            <summary>
            Executes a JavaScript script asynchronously.
            </summary>
            <param name="script">The script to execute.</param>
            <param name="args">An array of objects used as arguments in the script.</param>
            <returns>The object which is the return value of the script.</returns>
            <exception cref="T:System.InvalidOperationException">if the object executing the function doesn't support JavaScript.</exception>
            <exception cref="T:OpenQA.Selenium.WebDriverException">if the page reloads during the JavaScript execution.</exception>
            <exception cref="T:System.TimeoutException">if the timeout expires during the JavaScript execution.</exception>
        </member>
        <member name="P:OpenQA.Selenium.Internal.AsyncJavaScriptExecutor.Timeout">
            <summary>
            Gets or sets the timeout for the script executor.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.FileUtilities">
            <summary>
            Encapsulates methods for working with files.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.CopyDirectory(System.String,System.String)">
            <summary>
            Recursively copies a directory.
            </summary>
            <param name="sourceDirectory">The source directory to copy.</param>
            <param name="destinationDirectory">The destination directory.</param>
            <returns><see langword="true"/> if the copy is completed; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Internal.FileUtilities.DeleteDirectory(System.String)">
            <summary>
            Recursively deletes a directory, retrying on error until a timeout.
            </summary>
            <param name="directoryToDelete">The directory to delete.</param>
            <remarks>This method does not throw an exception if the delete fails.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Internal.IWrapsElement">
            <summary>
            Defines the interface through which the user can discover if there is an underlying element to be used.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.IWrapsElement.WrappedElement">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.IWebElement"/> wrapped by this object.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NativeMethods">
            <summary>
            Provides entry points into needed unmanaged APIs.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.NativeMethods.HandleInformation">
            <summary>
            Values for flags for setting information about a native operating system handle.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.NativeMethods.HandleInformation.None">
            <summary>
            No flags are to be set for the handle.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.NativeMethods.HandleInformation.Inherit">
            <summary>
            If this flag is set, a child process created with the bInheritHandles 
            parameter of CreateProcess set to TRUE will inherit the object handle.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.NativeMethods.HandleInformation.ProtectFromClose">
            <summary>
            If this flag is set, calling the CloseHandle function will not close the 
            object handle.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Internal.PortUtilities">
            <summary>
            Encapsulates methods for working with ports.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.PortUtilities.FindFreePort">
            <summary>
            Finds a random, free port to be listened on.
            </summary>
            <returns>A random, free port to be listened on.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ResourceUtilities">
            <summary>
            Encapsulates methods for finding and extracting WebDriver resources.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ResourceUtilities.GetResourceStream(System.String,System.String)">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> that contains the resource to use.
            </summary>
            <param name="fileName">A file name in the file system containing the resource to use.</param>
            <param name="resourceId">A string representing the resource name embedded in the
            executing assembly, if it is not found in the file system.</param>
            <returns>A Stream from which the resource can be read.</returns>
            <exception cref="T:OpenQA.Selenium.WebDriverException">Thrown if neither the file nor the embedded resource can be found.</exception>
            <remarks>
            The GetResourceStream method searches for the specified resource using the following
            algorithm:
            <para>
            <list type="numbered">
            <item>In the same directory as the calling assembly.</item>
            <item>In the full path specified by the <paramref name="fileName"/> argument.</item>
            <item>Inside the calling assembly as an embedded resource.</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="T:OpenQA.Selenium.Internal.ReturnedCookie">
            <summary>
            Represents a cookie returned to the driver by the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCookie.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Boolean,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Internal.ReturnedCookie"/> class with a specific name, 
            value, domain, path and expiration date.
            </summary>
            <param name="name">The name of the cookie.</param>
            <param name="value">The value of the cookie.</param>
            <param name="domain">The domain of the cookie.</param>
            <param name="path">The path of the cookie.</param>
            <param name="expiry">The expiration date of the cookie.</param>
            <param name="isSecure"><see langword="true"/> if the cookie is secure; otherwise <see langword="false"/></param>
            <param name="currentUrl">The current <see cref="T:System.Uri"/> the browser is viewing.</param>
            <exception cref="T:System.ArgumentException">If the name is <see langword="null"/> or an empty string,
            or if it contains a semi-colon.</exception>
            <exception cref="T:System.ArgumentNullException">If the value or currentUrl is <see langword="null"/>.</exception>
        </member>
        <member name="M:OpenQA.Selenium.Internal.ReturnedCookie.ToString">
            <summary>
            Creates and returns a string representation of the current cookie. 
            </summary>
            <returns>A string representation of the current cookie.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCookie.CurrentHost">
            <summary>
            Gets the current URL the browser is viewing.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Internal.ReturnedCookie.Secure">
            <summary>
            Gets a value determining if the cookie is secure.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CapabilityType">
            <summary>
            Provides types of capabilities for the DesiredCapabilities object.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.BrowserName">
            <summary>
            Capability name used for the browser name.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Platform">
            <summary>
            Capability name used for the browser platform.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Version">
            <summary>
            Capability name used for the browser version.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.IsJavaScriptEnabled">
            <summary>
            Capability name used to indicate whether JavaScript is enabled for the browser.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.TakesScreenshot">
            <summary>
            Capability name used to indicate whether the browser can take screenshots.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.HandlesAlerts">
            <summary>
            Capability name used to indicate whether the browser can handle alerts.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.SupportsFindingByCss">
            <summary>
            Capability name used to indicate whether the browser can find elements via CSS selectors.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Proxy">
            <summary>
            Capability name used for the browser proxy.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.Rotatable">
            <summary>
            Capability name used to indicate whether the browser supports rotation.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.AcceptSslCertificates">
            <summary>
            Capability name used to indicate whether the browser accepts SSL certificates.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CapabilityType.HasNativeEvents">
            <summary>
            Capability name used to indicate whether the browser uses native events.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.Command">
            <summary>
            Provides a way to send commands to the remote server
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Command class using a command name and a JSON-encoded string for the parameters.
            </summary>
            <param name="name">Name of the command</param>
            <param name="jsonParameters">Parameters for the command as a JSON-encoded string.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.#ctor(OpenQA.Selenium.Remote.SessionId,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the Command class for a Session
            </summary>
            <param name="sessionId">Session ID the driver is using</param>
            <param name="name">Name of the command</param>
            <param name="parameters">Parameters for that command</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.ToString">
            <summary>
            Returns a string of the Command object
            </summary>
            <returns>A string representation of the Command Object</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Command.ConvertParametersFromJson(System.String)">
            <summary>
            Gets the command parameters as a <see cref="T:System.Collections.Generic.Dictionary`2"/>, with a string key, and an object value.
            </summary>
            <param name="value">The JSON-encoded string representing the command parameters.</param>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2"/> with a string keys, and an object value. </returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.SessionId">
            <summary>
            Gets the SessionID of the command
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.Name">
            <summary>
            Gets the command name
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.Parameters">
            <summary>
            Gets the parameters of the command
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Command.ParametersAsJsonString">
            <summary>
            Gets the parameters of the command as a JSON-encoded string.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CommandInfo">
            <summary>
            Provides the execution information for a <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/>.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CommandInfo.PostCommand">
            <summary>
            POST verb for the command info
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CommandInfo.GetCommand">
            <summary>
            GET verb for the command info
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.CommandInfo.DeleteCommand">
            <summary>
            DELETE verb for the command info
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the CommandInfo class
            </summary>
            <param name="method">Method of the Command</param>
            <param name="resourcePath">Relative URL path to the resource used to execute the command</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfo.CreateWebRequest(System.Uri,OpenQA.Selenium.Remote.Command)">
            <summary>
            Creates a webrequest for your command
            </summary>
            <param name="baseUri">Uri that will have the command run against</param>
            <param name="commandToExecute">Command to execute</param>
            <returns>A web request of what has been run</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.CommandInfo.ResourcePath">
            <summary>
            Gets the URL representing the path to the resource.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.CommandInfo.Method">
            <summary>
            Gets the HTTP method associated with the command.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CommandInfoRepository">
            <summary>
            Holds the information about all commands specified by the JSON wire protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfoRepository.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:OpenQA.Selenium.Remote.CommandInfoRepository"/> class from being created.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CommandInfoRepository.GetCommandInfo(System.String)">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Remote.CommandInfo"/> for a <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/>.
            </summary>
            <param name="commandName">The <see cref="T:OpenQA.Selenium.Remote.DriverCommand"/> for which to get the information.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Remote.CommandInfo"/> for the specified command.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.CommandInfoRepository.Instance">
            <summary>
            Gets the singleton instance of the <see cref="T:OpenQA.Selenium.Remote.CommandInfoRepository"/>.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DesiredCapabilities">
            <summary>
            Class to Create the capabilities of the browser you require for <see cref="T:OpenQA.Selenium.IWebDriver"/>. 
            If you wish to use default values use the static methods
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor(System.String,System.String,OpenQA.Selenium.Platform)">
            <summary>
            Initializes a new instance of the DesiredCapabilities class
            </summary>
            <param name="browser">Name of the browser e.g. firefox, internet explorer, safari</param>
            <param name="version">Version of the browser</param>
            <param name="platform">The platform it works on</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor">
            <summary>
            Initializes a new instance of the DesiredCapabilities class
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the DesiredCapabilities class
            </summary>
            <param name="rawMap">Dictionary of items for the remotedriver</param>
            <example>
            <code>
            DesiredCapabilities capabilities = new DesiredCapabilities(new Dictionary<![CDATA[<string,object>]]>(){["browserName","firefox"],["version",string.Empty],["javaScript",true]});
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Firefox">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilites for use with Firefox</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.InternetExplorer">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with Internet Explorer</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.HtmlUnit">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with HTMLUnit</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.HtmlUnitWithJavaScript">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with HTMLUnit with JS</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.IPhone">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with iPhone</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.IPad">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with iPad</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Chrome">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with Chrome</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Android">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with Android</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Opera">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with Opera</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Safari">
            <summary>
            Method to return a new DesiredCapabilities using defaults
            </summary>
            <returns>New instance of DesiredCapabilities for use with Safari</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.HasCapability(System.String)">
            <summary>
            Gets a value indicating whether the browser has a given capability.
            </summary>
            <param name="capability">The capability ot get.</param>
            <returns>Returns <see langword="true"/> if the browser has the capability; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.GetCapability(System.String)">
            <summary>
            Gets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <returns>An object associated with the capability, or <see langword="null"/>
            if the capability is not set on the browser.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.SetCapability(System.String,System.Object)">
            <summary>
            Sets a capability of the browser.
            </summary>
            <param name="capability">The capability to get.</param>
            <param name="capabilityValue">The value for the capability.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.GetHashCode">
            <summary>
            Return HashCode for the DesiredCapabilties that has been created
            </summary>
            <returns>Integer of HashCode generated</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.ToString">
            <summary>
            Return a string of capabilies being used
            </summary>
            <returns>String of capabilites being used</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilities.Equals(System.Object)">
            <summary>
            Compare two DesiredCapabilities and will return either true or false
            </summary>
            <param name="obj">DesiredCapabities you wish to compare</param>
            <returns>true if they are the same or false if they are not</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.BrowserName">
            <summary>
            Gets the browser name 
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.Platform">
            <summary>
            Gets or sets the platform
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.Version">
            <summary>
            Gets the browser version
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.IsJavaScriptEnabled">
            <summary>
            Gets or sets a value indicating whether the browser is javascript enabled
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.DesiredCapabilities.Capabilities">
            <summary>
            Gets the internal capabilities dictionary.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DriverCommand">
            <summary>
            Values describing the list of commands understood by a remote server using the JSON wire protocol.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DefineDriverMapping">
            <summary>
            Represents the Define Driver Mapping command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Status">
            <summary>
            Represents the Status command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.NewSession">
            <summary>
            Represents a New Session command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionList">
            <summary>
            Represents the Get Session List command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetSessionCapabilities">
            <summary>
            Represents the Get Session Capabilities command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Close">
            <summary>
            Represents a Browser close command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Quit">
            <summary>
            Represents a browser quit command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Get">
            <summary>
            Represents a GET command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GoBack">
            <summary>
            Represents a Browser going back command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GoForward">
            <summary>
            Represents a Browser going forward command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Refresh">
            <summary>
            Represents a Browser refreshing command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.AddCookie">
            <summary>
            Represents adding a cookie command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAllCookies">
            <summary>
            Represents getting all cookies command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DeleteCookie">
            <summary>
            Represents deleting a cookie command
            </summary>        
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DeleteAllCookies">
            <summary>
            Represents Deleting all cookies command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindElement">
            <summary>
            Represents findelement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindElements">
            <summary>
            Represents findelements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindChildElement">
            <summary>
            Represents findchildelements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.FindChildElements">
            <summary>
            Represents findchildelements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DescribeElement">
            <summary>
            Describes an element
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClearElement">
            <summary>
            Represents clearelements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ClickElement">
            <summary>
            Represents clickelements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SendKeysToElement">
            <summary>
            Represents SendKeysToElements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SubmitElement">
            <summary>
            Represents SubmitElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetCurrentWindowHandle">
            <summary>
            Represents findchildelements command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowHandles">
            <summary>
            Represents GetWindowHandles command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SwitchToWindow">
            <summary>
            Represents SwitchToWindow command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SwitchToFrame">
            <summary>
            Represents SwitchToFrame command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetActiveElement">
            <summary>
            Represents GetActiveElement command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetCurrentUrl">
            <summary>
            Represents GetCurrentUrl command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetPageSource">
            <summary>
            Represents GetPageSource command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetTitle">
            <summary>
            Represents GetTitle command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ExecuteScript">
            <summary>
            Represents ExecuteScript command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ExecuteAsyncScript">
            <summary>
            Represents ExecuteAsyncScript command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementText">
            <summary>
            Represents GetElementText command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementTagName">
            <summary>
            Represents GetElementTagName command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.IsElementSelected">
            <summary>
            Represents IsElementSelected command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.IsElementEnabled">
            <summary>
            Represents IsElementEnabled command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.IsElementDisplayed">
            <summary>
            Represents IsElementDisplayed command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementLocation">
            <summary>
            Represents GetElementLocation command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementLocationOnceScrolledIntoView">
            <summary>
            Represents GetElementLocationOnceScrolledIntoView command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementSize">
            <summary>
            Represents GetElementSize command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementAttribute">
            <summary>
            Represents GetElementAttribute command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetElementValueOfCssProperty">
            <summary>
            Represents GetElementValueOfCssProperty command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ElementEquals">
            <summary>
            Represents ElementEquals command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.Screenshot">
            <summary>
            Represents Screenshot command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetOrientation">
            <summary>
            Represents GetOrientation command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetOrientation">
            <summary>
            Represents SetOrientation command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowSize">
            <summary>
            Represents GetWindowSize command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetWindowSize">
            <summary>
            Represents SetWindowSize command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetWindowPosition">
            <summary>
            Represents GetWindowPosition command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetWindowPosition">
            <summary>
            Represents SetWindowPosition command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MaximizeWindow">
            <summary>
            Represents MaximizeWindow command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.DismissAlert">
            <summary>
            Represents the DismissAlert command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.AcceptAlert">
            <summary>
            Represents the AcceptAlert command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.GetAlertText">
            <summary>
            Represents the GetAlertText command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetAlertValue">
            <summary>
            Represents the SetAlertValue command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.ImplicitlyWait">
            <summary>
            Represents the ImplicitlyWait command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetAsyncScriptTimeout">
            <summary>
            Represents the SetAsyncScriptTimeout command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SetTimeout">
            <summary>
            Represents the SetTimeout command
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseClick">
            <summary>
            Represents the MouseClick command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseDoubleClick">
            <summary>
            Represents the MouseDoubleClick command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseDown">
            <summary>
            Represents the MouseDown command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseUp">
            <summary>
            Represents the MouseUp command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.MouseMoveTo">
            <summary>
            Represents the MouseMoveTo command.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Remote.DriverCommand.SendKeysToActiveElement">
            <summary>
            Represents the SendKeysToActiveElement command.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DriverServiceCommandExecutor">
            <summary>
            Provides a mechanism to execute commands on the browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.#ctor(OpenQA.Selenium.DriverService,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.DriverServiceCommandExecutor"/> class.
            </summary>
            <param name="driverService">The <see cref="T:OpenQA.Selenium.DriverService"/> that drives the browser.</param>
            <param name="commandTimeout">The maximum amount of time to wait for each command.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command with the ChromeDriver.
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ErrorResponse">
            <summary>
            Provides a way to store errors from a repsonse
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.ErrorResponse"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ErrorResponse.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.ErrorResponse"/> class using the specified values.
            </summary>
            <param name="responseValue">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing names and values of
            the properties of this <see cref="T:OpenQA.Selenium.Remote.ErrorResponse"/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.Message">
            <summary>
            Gets or sets the message from the reponse
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.ClassName">
            <summary>
            Gets or sets the class name that threw the error
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.Screenshot">
            <summary>
            Gets or sets the screenshot of the error
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.ErrorResponse.StackTrace">
            <summary>
            Gets or sets the stack trace of the error
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteAlert">
            <summary>
            Defines the interface through which the user can manipulate JavaScript alerts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteAlert"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the alerts will be managed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.Dismiss">
            <summary>
            Dismisses the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.Accept">
            <summary>
            Accepts the alert.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteAlert.SendKeys(System.String)">
            <summary>
            Sends keys to the alert.
            </summary>
            <param name="keysToSend">The keystrokes to send.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteAlert.Text">
            <summary>
            Gets the text of the alert.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteCookieJar">
            <summary>
            Defines an interface allowing the user to manipulate cookies on the current page.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteCookieJar"/> class.
            </summary>
            <param name="driver">The driver that is currently in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.AddCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Method for creating a cookie in the browser
            </summary>
            <param name="cookie"><see cref="T:OpenQA.Selenium.Cookie"/> that represents a cookie in the browser</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.DeleteCookieNamed(System.String)">
            <summary>
            Delete the cookie by passing in the name of the cookie
            </summary>
            <param name="name">The name of the cookie that is in the browser</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.DeleteCookie(OpenQA.Selenium.Cookie)">
            <summary>
            Delete a cookie in the browser by passing in a copy of a cookie
            </summary>
            <param name="cookie">An object that represents a copy of the cookie that needs to be deleted</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.DeleteAllCookies">
            <summary>
            Delete All Cookies that are present in the browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.GetCookieNamed(System.String)">
            <summary>
            Method for returning a getting a cookie by name
            </summary>
            <param name="name">name of the cookie that needs to be returned</param>
            <returns>A Cookie from the name</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCookieJar.GetAllCookies">
            <summary>
            Method for getting a Collection of Cookies that are present in the browser
            </summary>
            <returns>ReadOnlyCollection of Cookies in the browser</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCookieJar.AllCookies">
            <summary>
            Gets all cookies defined for the current page.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteCoordinates">
            <summary>
            Defines the interface through which the user can discover where an element is on the screen.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteCoordinates.#ctor(OpenQA.Selenium.Remote.RemoteWebElement)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteCoordinates"/> class.
            </summary>
            <param name="element">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebElement"/> to be located.</param>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.LocationOnScreen">
            <summary>
            Gets the location of an element in absolute screen coordinates.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.LocationInViewport">
            <summary>
            Gets the location of an element relative to the origin of the view port.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.LocationInDom">
            <summary>
            Gets the location of an element's position within the HTML DOM.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteCoordinates.AuxiliaryLocator">
            <summary>
            Gets a locator providing a user-defined location for this element.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteKeyboard">
            <summary>
            Defines the interface through which the user can execute advanced keyboard interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteKeyboard"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the keyboard will be managed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.SendKeys(System.String)">
            <summary>
            Sends a sequence of keystrokes to the target.
            </summary>
            <param name="keySequence">A string representing the keystrokes to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.PressKey(System.String)">
            <summary>
            Presses a key.
            </summary>
            <param name="keyToPress">The key value representing the key to press.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteKeyboard.ReleaseKey(System.String)">
            <summary>
            Releases a key.
            </summary>
            <param name="keyToRelease">The key value representing the key to release.</param>
            <remarks>The key value must be one of the values from the <see cref="T:OpenQA.Selenium.Keys"/> class.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteMouse">
            <summary>
            Defines the interface through which the user can execute advanced mouse interactions.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteMouse"/> class.
            </summary>
            <param name="driver">The <see cref="T:OpenQA.Selenium.Remote.RemoteWebDriver"/> for which the mouse will be managed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.Click(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the primary mouse button.
            </summary>
            <param name="where">An <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.DoubleClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Double-clicks at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to double-click.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseDown(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Presses the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to press the mouse button down.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseUp(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Releases the primary mouse button at a set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to release the mouse button.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to move the mouse to.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.MouseMove(OpenQA.Selenium.Interactions.Internal.ICoordinates,System.Int32,System.Int32)">
            <summary>
            Moves the mouse to the specified set of coordinates.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
            <param name="offsetX">A horizontal offset from the coordinates specified in <paramref name="where"/>.</param>
            <param name="offsetY">A vertical offset from the coordinates specified in <paramref name="where"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteMouse.ContextClick(OpenQA.Selenium.Interactions.Internal.ICoordinates)">
            <summary>
            Clicks at a set of coordinates using the secondary mouse button.
            </summary>
            <param name="where">A <see cref="T:OpenQA.Selenium.Interactions.Internal.ICoordinates"/> describing where to click.</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteNavigator">
            <summary>
            Provides a mechanism for Navigating with the driver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the RemoteNavigator class
            </summary>
            <param name="driver">Driver in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.Back">
            <summary>
            Move the browser back
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.Forward">
            <summary>
            Move the browser forward
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(System.String)">
            <summary>
            Navigate to a url for your test
            </summary>
            <param name="url">String of where you want the browser to go to</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.GoToUrl(System.Uri)">
            <summary>
            Navigate to a url for your test
            </summary>
            <param name="url">Uri object of where you want the browser to go to</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteNavigator.Refresh">
            <summary>
            Refresh the browser
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteOptions">
            <summary>
            Provides a mechanism for setting options needed for the driver during the test.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteOptions.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the RemoteOptions class
            </summary>
            <param name="driver">Instance of the driver currently in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteOptions.Timeouts">
            <summary>
            Provides access to the timeouts defined for this driver.
            </summary>
            <returns>An object implementing the <see cref="T:OpenQA.Selenium.ITimeouts"/> interface.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteOptions.Cookies">
            <summary>
            Gets an object allowing the user to manipulate cookies on the page.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteOptions.Window">
            <summary>
            Gets an object allowing the user to manipulate the currently-focused browser window.
            </summary>
            <remarks>"Currently-focused" is defined as the browser window having the window handle
            returned when IWebDriver.CurrentWindowHandle is called.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteTargetLocator">
            <summary>
            Provides a mechanism for finding elements on the page with locators.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the RemoteTargetLocator class
            </summary>
            <param name="driver">The driver that is currently in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Frame(System.Int32)">
            <summary>
            Move to a different frame using its index
            </summary>
            <param name="frameIndex">The index of the </param>
            <returns>A WebDriver instance that is currently in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Frame(System.String)">
            <summary>
            Move to different frame using its name
            </summary>
            <param name="frameName">name of the frame</param>
            <returns>A WebDriver instance that is currently in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Frame(OpenQA.Selenium.IWebElement)">
            <summary>
            Move to a frame element.
            </summary>
            <param name="frameElement">a previously found FRAME or IFRAME element.</param>
            <returns>A WebDriver instance that is currently in use.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Window(System.String)">
            <summary>
            Change to the Window by passing in the name
            </summary>
            <param name="windowName">name of the window that you wish to move to</param>
            <returns>A WebDriver instance that is currently in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.DefaultContent">
            <summary>
            Change the active frame to the default 
            </summary>
            <returns>Element of the default</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.ActiveElement">
            <summary>
            Finds the active element on the page and returns it
            </summary>
            <returns>Element that is active</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTargetLocator.Alert">
            <summary>
            Switches to the currently active modal dialog for this particular driver instance.
            </summary>
            <returns>A handle to the dialog.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteTimeouts">
            <summary>
            Defines the interface through which the user can define timeouts.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTimeouts.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the RemoteTimeouts class
            </summary>
            <param name="driver">The driver that is currently in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTimeouts.ImplicitlyWait(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait when searching for an
            element if it is not immediately present.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.</param>
            <returns>A self reference</returns>
            <remarks>
            When searching for a single element, the driver should poll the page
            until the element has been found, or this timeout expires before throwing
            a <see cref="T:OpenQA.Selenium.NoSuchElementException"/>. When searching for multiple elements,
            the driver should poll the page until at least one element has been found
            or this timeout has expired.
            <para>
            Increasing the implicit wait timeout should be used judiciously as it
            will have an adverse effect on test run time, especially when used with
            slower location strategies like XPath.
            </para>
            </remarks>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTimeouts.SetScriptTimeout(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait when executing JavaScript asynchronously.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.
            Setting this parameter to <see cref="F:System.TimeSpan.MinValue"/> will allow the script to run indefinitely.</param>
            <returns>A self reference</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteTimeouts.SetPageLoadTimeout(System.TimeSpan)">
            <summary>
            Specifies the amount of time the driver should wait for a page to load when setting the <see cref="P:OpenQA.Selenium.IWebDriver.Url"/> property.
            </summary>
            <param name="timeToWait">A <see cref="T:System.TimeSpan"/> structure defining the amount of time to wait.
            Setting this parameter to <see cref="F:System.TimeSpan.MinValue"/> will allow the page to load indefinitely.</param>
            <returns>A self reference</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.RemoteWindow">
            <summary>
            Defines the interface through which the user can manipulate the browser window.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWindow.#ctor(OpenQA.Selenium.Remote.RemoteWebDriver)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.RemoteWindow"/> class.
            </summary>
            <param name="driver">Instance of the driver currently in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.RemoteWindow.Maximize">
            <summary>
            Maximizes the current window if it is not already maximized.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWindow.Position">
            <summary>
            Gets or sets the position of the browser window relative to the upper-left corner of the screen.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.moveTo() method.</remarks>
        </member>
        <member name="P:OpenQA.Selenium.Remote.RemoteWindow.Size">
            <summary>
            Gets or sets ths size of the outer browser window, including title bars and window borders.
            </summary>
            <remarks>When setting this property, it should act as the JavaScript window.resizeTo() method.</remarks>
        </member>
        <member name="T:OpenQA.Selenium.Remote.Response">
            <summary>
            Handles reponses from the browser
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.#ctor">
            <summary>
            Initializes a new instance of the Response class
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.#ctor(OpenQA.Selenium.Remote.SessionId)">
            <summary>
            Initializes a new instance of the Response class
            </summary>
            <param name="sessionId">Session ID in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.FromJson(System.String)">
            <summary>
            Returns a new <see cref="T:OpenQA.Selenium.Remote.Response"/> from a JSON-encoded string.
            </summary>
            <param name="value">The JSON string to deserialize into a <see cref="T:OpenQA.Selenium.Remote.Response"/>.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Remote.Response"/> object described by the JSON string.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.ToJson">
            <summary>
            Returns this object as a JSON-encoded string.
            </summary>
            <returns>A JSON-encoded string representing this <see cref="T:OpenQA.Selenium.Remote.Response"/> object.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.Response.ToString">
            <summary>
            Returns the object as a string.
            </summary>
            <returns>A string with the Session ID, status value, and the value from JSON.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.Value">
            <summary>
            Gets or sets the value from JSON.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.SessionId">
            <summary>
            Gets or sets the session ID.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.Response.Status">
            <summary>
            Gets or sets the status value of the response.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.SessionId">
            <summary>
            Provides a mechanism for maintaining a session for a test
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SessionId class
            </summary>
            <param name="opaqueKey">Key for the session in use</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.ToString">
            <summary>
            Get the value of the key
            </summary>
            <returns>The key in use</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.GetHashCode">
            <summary>
            Get the hashcode of the key
            </summary>
            <returns>The hashcode of the key</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.SessionId.Equals(System.Object)">
            <summary>
            Compares two Sessions
            </summary>
            <param name="obj">Session to compare</param>
            <returns>True if they are equal or False if they are not</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.StackTraceElement">
            <summary>
            Gives properties to get a stack trace
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.StackTraceElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.StackTraceElement"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.StackTraceElement.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Remote.StackTraceElement"/> class using the given property values.
            </summary>
            <param name="elementAttributes">A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the names and values for the properties of this <see cref="T:OpenQA.Selenium.Remote.StackTraceElement"/>.</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.StackTraceElement.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            <returns>A string representation of the object.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.FileName">
            <summary>
            Gets or sets the value of the filename in the stack
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.ClassName">
            <summary>
            Gets or sets the value of the Class name in the stack trace
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.LineNumber">
            <summary>
            Gets or sets the line number
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Remote.StackTraceElement.MethodName">
            <summary>
            Gets or sets the Method name in the stack trace
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CharArrayJsonConverter">
            <summary>
            Provides a way to convert a Char arry to JSON
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CharArrayJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">Type of the object to see if can be converted</param>
            <returns>True if can be converted else false</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CharArrayJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the Object to JSON
            </summary>
            <param name="writer">A JSON Writer object</param>
            <param name="value">Object to be converted</param>
            <param name="serializer">JSON Serializer object instance</param>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CharArrayJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Method not implemented
            </summary>
            <param name="reader">JSON Reader instance</param>
            <param name="objectType">Object type being read</param>
            <param name="existingValue">Existing Value to be read</param>
            <param name="serializer">JSON Serializer instance</param>
            <returns>Object from JSON</returns>
        </member>
        <member name="T:OpenQA.Selenium.Remote.CookieJsonConverter">
            <summary>
            Provides a way to convert Cookies to JSON and back
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CookieJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">Type of the object</param>
            <returns>A value indicating if it can be converted</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CookieJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Get the platform from the JSON reader
            </summary>
            <param name="reader">JSON Reader instance</param>
            <param name="objectType">Object type being read</param>
            <param name="existingValue">The exisiting value of the object</param>
            <param name="serializer">JSON Serializer instance</param>
            <returns>Platform from JSON reader</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.CookieJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Created a cookie from the JSON string
            </summary>
            <param name="writer">The JSON writer with a string</param>
            <param name="value">Value of the string</param>
            <param name="serializer">JSON serializer instance</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.DesiredCapabilitiesJsonConverter">
            <summary>
            Provides a way to convert DesiredCapabilities objects to JSON and back
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilitiesJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">Type of the object</param>
            <returns>A value indicating if it can be converted</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilitiesJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Get the capabilities from the JSON reader
            </summary>
            <param name="reader">JSON Reader instance</param>
            <param name="objectType">Object type being read</param>
            <param name="existingValue">The exisiting value of the object</param>
            <param name="serializer">JSON Serializer instance</param>
            <returns>Platform from JSON reader</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.DesiredCapabilitiesJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a JSON string representing the DesiredCapabilities object
            </summary>
            <param name="writer">The JSON writer with a string</param>
            <param name="value">Value of the string</param>
            <param name="serializer">JSON serializer instance</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.PlatformJsonConverter">
            <summary>
            Provides a mechanism to get the platform from JSON and write the platform 
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.PlatformJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the type can be converted
            </summary>
            <param name="objectType">Object type to be converted</param>
            <returns>A value indicating if it can be converted</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.PlatformJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Get the platform from the JSON reader
            </summary>
            <param name="reader">JSON Reader instance</param>
            <param name="objectType">Object type being read</param>
            <param name="existingValue">The exisiting value of the object</param>
            <param name="serializer">JSON Serializer instance</param>
            <returns>Platform from JSON reader</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.PlatformJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the platform to JSON
            </summary>
            <param name="writer">JSON Writer instance</param>
            <param name="value">the platform</param>
            <param name="serializer">JSON Serializer Instance</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ProxyJsonConverter">
            <summary>
            Provides a way to convert a <see cref="T:OpenQA.Selenium.Proxy"/> arry to JSON
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ProxyJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">Type of the object</param>
            <returns>A value indicating if it can be converted</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ProxyJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Get the platform from the JSON reader
            </summary>
            <param name="reader">JSON Reader instance</param>
            <param name="objectType">Object type being read</param>
            <param name="existingValue">The exisiting value of the object</param>
            <param name="serializer">JSON Serializer instance</param>
            <returns>Platform from JSON reader</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ProxyJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Create a JSON string representation of the Proxy
            </summary>
            <param name="writer">The JSON writer with a string</param>
            <param name="value">Value of the string</param>
            <param name="serializer">JSON serializer instance</param>
        </member>
        <member name="T:OpenQA.Selenium.Remote.ResponseValueJsonConverter">
            <summary>
            Converts the response to JSON
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ResponseValueJsonConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">The object to be converted</param>
            <returns>True if it can be converted or false if can't be</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ResponseValueJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Pricess the reader to return an object from JSON
            </summary>
            <param name="reader">A JSON reader</param>
            <param name="objectType">Type of the object</param>
            <param name="existingValue">The existing value of the object</param>
            <param name="serializer">JSON Serializer</param>
            <returns>Object created from JSON</returns>
        </member>
        <member name="M:OpenQA.Selenium.Remote.ResponseValueJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes objects to JSON. Currently not implemented
            </summary>
            <param name="writer">JSON Writer Object</param>
            <param name="value">Value to be written</param>
            <param name="serializer">JSON Serializer </param>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariCommand">
            <summary>
            Wraps a commmand object to give it a unique ID as required by the Safari extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariCommand.#ctor(OpenQA.Selenium.Remote.Command)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariCommand"/> class.
            </summary>
            <param name="command">The <see cref="T:OpenQA.Selenium.Remote.Command"/> object used as a base for this <see cref="T:OpenQA.Selenium.Safari.SafariCommand"/>.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariCommand.Id">
            <summary>
            Gets the ID of the command.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariCommandMessage">
            <summary>
            Creates a WebSockets command message according to the SafariDriver specification.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariCommandMessage.#ctor(OpenQA.Selenium.Safari.SafariCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariCommandMessage"/> class.
            </summary>
            <param name="command">The <see cref="T:OpenQA.Selenium.Safari.SafariCommand"/> to wrap.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariCommandMessage.MessageOrigin">
            <summary>
            Gets the origin of the WebSocket message.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariCommandMessage.MessageType">
            <summary>
            Gets the type of the WebSocket message.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariCommandMessage.Command">
            <summary>
            Gets the wrapped command for transport.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariDriver">
            <summary>
            Provides a way to access Safari to run your tests by creating a SafariDriver instance
            </summary>
            <remarks>
            When the WebDriver object has been instantiated the browser will load. The test can then navigate to the URL under test and 
            start your test.
            </remarks>
            <example>
            <code>
            [TestFixture]
            public class Testing
            {
                private IWebDriver driver;
                <para></para>
                [SetUp]
                public void SetUp()
                {
                    driver = new SafariDriver();
                }
                <para></para>
                [Test]
                public void TestGoogle()
                {
                    driver.Navigate().GoToUrl("http://www.google.co.uk");
                    /*
                    *   Rest of the test
                    */
                }
                <para></para>
                [TearDown]
                public void TearDown()
                {
                    driver.Quit();
                    driver.Dispose();
                } 
            }
            </code>
            </example>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriver"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.StartClient">
            <summary>
            Starts the command executor, enabling communication with the browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriver.StopClient">
            <summary>
            Stops the command executor, ending further communication with the browser.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariDriverCommandExecutor">
            <summary>
            Provides a way of executing Commands using the SafariDriver.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverCommandExecutor.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverCommandExecutor"/> class.
            </summary>
            <param name="port">The port on which the executor communicates with the extension.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverCommandExecutor.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverCommandExecutor"/> class.
            </summary>
            <param name="port">The port on which the executor communicates with the extension.</param>
            <param name="safariLocation">The locatoin of the Safari exectuable</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverCommandExecutor.Start">
            <summary>
            Starts the command executor.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverCommandExecutor.Execute(OpenQA.Selenium.Remote.Command)">
            <summary>
            Executes a command
            </summary>
            <param name="commandToExecute">The command you wish to execute</param>
            <returns>A response from the browser</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverCommandExecutor.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Safari.SafariDriverCommandExecutor"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverCommandExecutor.Dispose(System.Boolean)">
            <summary>
            Releases all resources associated with this <see cref="T:OpenQA.Selenium.Safari.SafariDriverCommandExecutor"/>.
            </summary>
            <param name="disposing"><see langword="true"/> if the Dispose method was explicitly called; otherwise, <see langword="false"/>.</param>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariDriverConnection">
            <summary>
            Represents a connection to an instance of the Safari browser.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverConnection.#ctor(OpenQA.Selenium.Safari.Internal.IWebSocketConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverConnection"/> class.
            </summary>
            <param name="connection">An <see cref="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnection"/> representing a 
            connection using the WebSockets protocol.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverConnection.Send(OpenQA.Selenium.Remote.Command)">
            <summary>
            Sends a command to the SafariDriver and waits for a response.
            </summary>
            <param name="command">The <see cref="T:OpenQA.Selenium.Remote.Command"/> to send to the driver.</param>
            <returns>The <see cref="T:OpenQA.Selenium.Remote.Response"/> from the command.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariDriverServer">
            <summary>
            Provides the WebSockets server for communicating with the Safari extension.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverServer"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.SafariDriverServer"/> class using a specific port for communication.
            </summary>
            <param name="port">The port to use to communicate.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.Start">
            <summary>
            Starts the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.Stop">
            <summary>
            Stops the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.WaitForConnection(System.TimeSpan)">
            <summary>
            Waits for a connection to be established with the server by the Safari browser extension.
            </summary>
            <param name="timeout">A <see cref="T:System.TimeSpan"/> containing the amount of time to wait for the connection.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Safari.SafariDriverConnection"/> representing the connection to the browser.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Safari.SafariDriverServer"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariDriverServer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Safari.Internal.SocketWrapper"/> and optionally 
            releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources; 
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariDriverServer.ServerUri">
            <summary>
            Gets the URI of the server.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.SafariResponseMessage">
            <summary>
            Creates a WebSockets response message according to the SafariDriver specification.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.SafariResponseMessage.FromJson(System.String)">
            <summary>
            Returns a new <see cref="P:OpenQA.Selenium.Safari.SafariResponseMessage.Response"/> from a JSON-encoded string.
            </summary>
            <param name="value">The JSON string to deserialize into a <see cref="P:OpenQA.Selenium.Safari.SafariResponseMessage.Response"/>.</param>
            <returns>A <see cref="P:OpenQA.Selenium.Safari.SafariResponseMessage.Response"/> object described by the JSON string.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariResponseMessage.Id">
            <summary>
            Gets or sets the ID of the command.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariResponseMessage.MessageOrigin">
            <summary>
            Gets or sets the origin of the response message.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariResponseMessage.MessageType">
            <summary>
            Gets or sets the type of the response message.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.SafariResponseMessage.Response">
            <summary>
            Gets or sets the internal response for the given command.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.AcceptEventArgs">
            <summary>
            Provides arguments for handling the event for accepting connections.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.AcceptEventArgs.#ctor(OpenQA.Selenium.Safari.Internal.ISocket)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.AcceptEventArgs"/> class.
            </summary>
            <param name="socket">The <see cref="T:OpenQA.Selenium.Safari.Internal.ISocket"/> to use in the event.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.AcceptEventArgs.Socket">
            <summary>
            Gets the <see cref="T:OpenQA.Selenium.Safari.Internal.ISocket"/> object to use in handling the event.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs">
            <summary>
            Provides arguments for handling the event for receiving a binary message.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs"/> class.
            </summary>
            <param name="data">The binary data in the message.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs.Data">
            <summary>
            Gets the binary data of the message.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs">
            <summary>
            Provides arguments for handling events associated with connections to the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs.#ctor(OpenQA.Selenium.Safari.Internal.IWebSocketConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs"/> class.
            </summary>
            <param name="connection">The <see cref="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnection"/> representing the 
            connection to the client.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs.Connection">
            <summary>
            Gets the connection to the client.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs">
            <summary>
            Provides arguments for handling events associated with errors.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> class.
            </summary>
            <param name="exception">The <see cref="P:OpenQA.Selenium.Safari.Internal.ErrorEventArgs.Exception"/> thrown for the error condition.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ErrorEventArgs.Exception">
            <summary>
            Gets the <see cref="P:OpenQA.Selenium.Safari.Internal.ErrorEventArgs.Exception"/> associated with the error condition.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.FrameType">
            <summary>
            Enumerates the types of frames described by the WebSocket protocol.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.FrameType.Continuation">
            <summary>
            Indicates a continuation frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.FrameType.Text">
            <summary>
            Indicates a text frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.FrameType.Binary">
            <summary>
            Indicates a binary frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.FrameType.Close">
            <summary>
            Indicates a close frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.FrameType.Ping">
            <summary>
            Indicates a ping frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.FrameType.Pong">
            <summary>
            Indicates a ping response frame.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.HandlerFactory">
            <summary>
            Provides a factory for creating handlers for the different versions of the WebSocket protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandlerFactory.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.HandlerFactory"/> class from being created.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandlerFactory.BuildHandler(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest)">
            <summary>
            Creates a handler to handle a <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.
            </summary>
            <param name="request">The <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> to create the handler for.</param>
            <returns>An <see cref="T:OpenQA.Selenium.Safari.Internal.IHandler"/> object that can handle the specific protocol version
            of the request.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandlerFactory.GetVersion(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest)">
            <summary>
            Gets the version of an <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.
            </summary>
            <param name="request">The <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> to get the protocol version of.</param>
            <returns>A string containing the version of the protocol of the request.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.HandshakeException">
            <summary>
            Provides an exception for handshake errors in the protocol connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandshakeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.HandshakeException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandshakeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.HandshakeException"/> class with a specified error message.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandshakeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.HandshakeException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The inner exception that is the cause of this exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.HandshakeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.HandshakeException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.IHandler">
            <summary>
            Provides an interface for handling communication over the WebSocket connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IHandler.ProcessData(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Processes data received by the connection.
            </summary>
            <param name="data">The data to be processed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IHandler.CreateHandshake">
            <summary>
            Creates a handshake message for initiating connections.
            </summary>
            <returns>A byte array containing the handshake message.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IHandler.CreateTextFrame(System.String)">
            <summary>
            Creates a frame for text messages in the WebSocket protocol.
            </summary>
            <param name="text">The text of the message.</param>
            <returns>A byte array containing the message frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IHandler.CreateBinaryFrame(System.Byte[])">
            <summary>
            Creates a frame for binary messages in the WebSocket protocol.
            </summary>
            <param name="frameData">The binary data of the message.</param>
            <returns>A byte array containing the message frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IHandler.CreateCloseFrame(System.Int32)">
            <summary>
            Creates a frame for close messages in the WebSocket protocol.
            </summary>
            <param name="code">The connection close code of the message.</param>
            <returns>A byte array containing the message frame.</returns>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IHandler.TextMessageHandled">
            <summary>
            Event raised when a text message is processed by the handler.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IHandler.BinaryMessageHandled">
            <summary>
            Event raised when a binary message is processed by the handler.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IHandler.CloseHandled">
            <summary>
            Event raised when a close message is processed by the handler.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.IntExtensions">
            <summary>
            Provides extension methods for converting integers.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IntExtensions.ToBigEndianByteArray(System.UInt16)">
            <summary>
            Converts a <see cref="T:System.UInt16"/> to a big-endian byte array.
            </summary>
            <param name="source">The value to convert.</param>
            <returns>A byte array containing a big-endian representation of the value.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IntExtensions.ToBigEndianByteArray(System.UInt64)">
            <summary>
            Converts a <see cref="T:System.UInt64"/> to a big-endian byte array.
            </summary>
            <param name="source">The value to convert.</param>
            <returns>A byte array containing a big-endian representation of the value.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IntExtensions.ToLittleEndianInt32(System.Byte[])">
            <summary>
            Converts a byte array to a little-endian value.
            </summary>
            <param name="source">The byte array to convert.</param>
            <returns>The little-endian representation of the array as a <see cref="T:System.Int32"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.IRequestParser">
            <summary>
            Provides an interface for parsing requests.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IRequestParser.Parse(System.Byte[])">
            <summary>
            Parses the specified data into a <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.
            </summary>
            <param name="requestData">The data to be parsed.</param>
            <returns>The parsed <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IRequestParser.Parse(System.Byte[],System.String)">
            <summary>
            Parses the specified data into a <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> for the given scheme.
            </summary>
            <param name="requestData">The data to be parsed.</param>
            <param name="scheme">The scheme to use in parsing the data.</param>
            <returns>The parsed <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.ISocket">
            <summary>
            Provides an interface simplifying the use of asynchronous communication using a socket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Accept">
            <summary>
            Accepts a connection for the socket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Send(System.Byte[])">
            <summary>
            Sends data over the socket.
            </summary>
            <param name="buffer">The data to be sent.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Receive(System.Byte[],System.Int32)">
            <summary>
            Receives data over the socket.
            </summary>
            <param name="buffer">The buffer into which the data will be read.</param>
            <param name="offset">The offset into the buffer at which the data will be read.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Authenticate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Authenticates over the socket.
            </summary>
            <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> that specifies authentication information.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Close">
            <summary>
            Closes the socket connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Bind(System.Net.EndPoint)">
            <summary>
            Binds the socket to a local end point.
            </summary>
            <param name="localEndPoint">The local end point to which to bind the socket.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ISocket.Listen(System.Int32)">
            <summary>
            Starts listening to data received over the socket.
            </summary>
            <param name="backlog">The number of pending connections to process.</param>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.Accepted">
            <summary>
            Event raised when a connection is accepted by the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.AcceptError">
            <summary>
            Event raised when an error occurs accepting a connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.Sent">
            <summary>
            Event raised when data is sent through the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.SendError">
            <summary>
            Event raised when there is an error sending data.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.Received">
            <summary>
            Event raised when data is received by the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.ReceiveError">
            <summary>
            Event raised when there is an error receiving data.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.Authenticated">
            <summary>
            Event raised when authentication is completed over the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.ISocket.AuthenticateError">
            <summary>
            Event raised when there is an error authenticating over the socket.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ISocket.Connected">
            <summary>
            Gets a value indicating whether the socket is connected.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ISocket.RemoteIPAddress">
            <summary>
            Gets the remote IP address of the socket connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ISocket.Stream">
            <summary>
            Gets a stream for reading and writing data.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnection">
            <summary>
            Provides an interface describing a connection to a WebSocket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.Send(System.String)">
            <summary>
            Sends a text message over the connection.
            </summary>
            <param name="message">The text message to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.Send(System.Byte[])">
            <summary>
            Sends a binary message over the connection.
            </summary>
            <param name="message">The binary message to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.SendRaw(System.String)">
            <summary>
            Sends raw text over the connection, without passing through a handler.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.Close">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.Opened">
            <summary>
            Event raised when a connection is opened.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.Closed">
            <summary>
            Event raised when a connection is closed.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.MessageReceived">
            <summary>
            Event raised when a text message is received via the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.BinaryMessageReceived">
            <summary>
            Event raised when a binary message is received via the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.StandardHttpRequestReceived">
            <summary>
            Event raised when a non-WebSocket message is received.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.ErrorReceived">
            <summary>
            Event raised when an error occurs via the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.Sent">
            <summary>
            Event raised when data is sent via the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnection.ConnectionInfo">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo"/> object describing the connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo">
            <summary>
            Provides an interface describing information about the WebSocket connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo.SubProtocol">
            <summary>
            Gets the subprotocol of the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo.Origin">
            <summary>
            Gets the origin of the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo.Host">
            <summary>
            Gets the host for the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo.Path">
            <summary>
            Gets the path for the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo.ClientIPAddress">
            <summary>
            Gets the IP address of the client for the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo.Cookies">
            <summary>
            Gets the collection of cookies for the connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.IWebSocketServer">
            <summary>
            Provides an interface for the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.IWebSocketServer.Start">
            <summary>
            Starts the server.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.ReadState">
            <summary>
            Represents the state of a connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ReadState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.ReadState"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ReadState.Clear">
            <summary>
            Clears the current state.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ReadState.Data">
            <summary>
            Gets the data of the current state.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ReadState.FrameType">
            <summary>
            Gets or sets the frame type of the current state.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.ReceivedEventArgs">
            <summary>
            Provides arguments for handling the event for when data is received.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.ReceivedEventArgs.#ctor(System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.ReceivedEventArgs"/> class.
            </summary>
            <param name="bytesRead">The number of bytes read.</param>
            <param name="buffer">A byte array containing the data read.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ReceivedEventArgs.BytesRead">
            <summary>
            Gets the number of bytes read.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.ReceivedEventArgs.Buffer">
            <summary>
            Gets the data read by the connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.RequestParser">
            <summary>
            Parses a request.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.RequestParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.RequestParser"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.RequestParser.Parse(System.Byte[])">
            <summary>
            Parses the specified data into a <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.
            </summary>
            <param name="requestData">The data to be parsed.</param>
            <returns>The parsed <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.RequestParser.Parse(System.Byte[],System.String)">
            <summary>
            Parses the specified data into a <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> for the given scheme.
            </summary>
            <param name="requestData">The data to be parsed.</param>
            <param name="scheme">The scheme to use in parsing the data.</param>
            <returns>The parsed <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/>.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.SocketWrapper">
            <summary>
            Provides a wrapper around a <see cref="T:System.Net.Sockets.Socket"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.SocketWrapper"/> class.
            </summary>
            <param name="socket">The <see cref="T:System.Net.Sockets.Socket"/> to wrap.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Accept">
            <summary>
            Accepts a connection for the socket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Send(System.Byte[])">
            <summary>
            Sends data over the socket.
            </summary>
            <param name="buffer">The data to be sent.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Receive(System.Byte[],System.Int32)">
            <summary>
            Receives data over the socket.
            </summary>
            <param name="buffer">The buffer into which the data will be read.</param>
            <param name="offset">The offset into the buffer at which the data will be read.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Authenticate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Authenticates over the socket.
            </summary>
            <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> that specifies authentication information.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Close">
            <summary>
            Closes the socket connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Bind(System.Net.EndPoint)">
            <summary>
            Binds the socket to a local end point.
            </summary>
            <param name="localEndPoint">The local end point to which to bind the socket.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Listen(System.Int32)">
            <summary>
            Starts listening to data received over the socket.
            </summary>
            <param name="backlog">The number of pending connections to process.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Safari.Internal.SocketWrapper"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnAccepted(OpenQA.Selenium.Safari.Internal.AcceptEventArgs)">
            <summary>
            Raises the Accepted event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.AcceptEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnAcceptError(OpenQA.Selenium.Safari.Internal.ErrorEventArgs)">
            <summary>
            Raises the AcceptError event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnSent(System.EventArgs)">
            <summary>
            Raises the Sent event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnSendError(OpenQA.Selenium.Safari.Internal.ErrorEventArgs)">
            <summary>
            Raises the SendError event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnReceived(OpenQA.Selenium.Safari.Internal.ReceivedEventArgs)">
            <summary>
            Raises the Received event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.ReceivedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnReceiveError(OpenQA.Selenium.Safari.Internal.ErrorEventArgs)">
            <summary>
            Raises the ReceiveError event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnAuthenticated(System.EventArgs)">
            <summary>
            Raises the Authenticated event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.OnAuthenticateError(OpenQA.Selenium.Safari.Internal.ErrorEventArgs)">
            <summary>
            Raises the AuthenticateError event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.SocketWrapper.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Safari.Internal.SocketWrapper"/> and optionally 
            releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources; 
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.Accepted">
            <summary>
            Event raised when a connection is accepted by the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.AcceptError">
            <summary>
            Event raised when an error occurs accepting a connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.Sent">
            <summary>
            Event raised when data is sent through the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.SendError">
            <summary>
            Event raised when there is an error sending data.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.Received">
            <summary>
            Event raised when data is received by the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.ReceiveError">
            <summary>
            Event raised when there is an error receiving data.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.Authenticated">
            <summary>
            Event raised when authentication is completed over the socket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.SocketWrapper.AuthenticateError">
            <summary>
            Event raised when there is an error authenticating over the socket.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.SocketWrapper.Connected">
            <summary>
            Gets a value indicating whether the socket is connected.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.SocketWrapper.RemoteIPAddress">
            <summary>
            Gets the remote IP address of the socket connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.SocketWrapper.Stream">
            <summary>
            Gets a stream for reading and writing data.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs">
            <summary>
            Provides arguments for handling events associated with connections to the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs.#ctor(OpenQA.Selenium.Safari.Internal.IWebSocketConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs"/> class.
            </summary>
            <param name="connection">The <see cref="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnection"/> representing the 
            connection to the client.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs.Connection">
            <summary>
            Gets the connection to the client.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether to the event was processed.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs">
            <summary>
            Provides arguments for handling the event for receiving a text message.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs"/> class.
            </summary>
            <param name="message">The text message received.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs.Message">
            <summary>
            Gets the text message received.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.WebSocketConnection">
            <summary>
            Represents a connection to a WebSocket.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.#ctor(OpenQA.Selenium.Safari.Internal.ISocket,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketConnection"/> class.
            </summary>
            <param name="socket">The <see cref="T:OpenQA.Selenium.Safari.Internal.ISocket"/> used in the connection.</param>
            <param name="parseScheme">The scheme used to parse requests.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Send(System.String)">
            <summary>
            Sends a text message over the connection.
            </summary>
            <param name="message">The text message to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Send(System.Byte[])">
            <summary>
            Sends a binary message over the connection.
            </summary>
            <param name="message">The binary message to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.SendRaw(System.String)">
            <summary>
            Sends raw text over the connection, without passing through a handler.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Close">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.StartReceiving">
            <summary>
            Starts the connection receiving requests.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnMessageReceived(OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs)">
            <summary>
            Fires the MessageReceived event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnBinaryMessageReceived(OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs)">
            <summary>
            Fires the BinaryMessageReceived event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnOpen(OpenQA.Selenium.Safari.Internal.ConnectionEventArgs)">
            <summary>
            Fires the Opened event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnClose(OpenQA.Selenium.Safari.Internal.ConnectionEventArgs)">
            <summary>
            Fires the Closed event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnStandardHttpRequestReceived(OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs)">
            <summary>
            Fires the StandardHttpRequestReceived event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnSend(System.EventArgs)">
            <summary>
            Fires the Sent event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnection.OnError(OpenQA.Selenium.Safari.Internal.ErrorEventArgs)">
            <summary>
            Fires the ErrorReceived event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Opened">
            <summary>
            Event raised when a connection is opened.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Closed">
            <summary>
            Event raised when a connection is closed.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.MessageReceived">
            <summary>
            Event raised when a text message is received via the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.BinaryMessageReceived">
            <summary>
            Event raised when a binary message is received via the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.StandardHttpRequestReceived">
            <summary>
            Event raised when a non-WebSocket message is received.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.ErrorReceived">
            <summary>
            Event raised when an error occurs via the connection.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Sent">
            <summary>
            Event raised when data is sent via the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Socket">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.Safari.Internal.ISocket"/> implementation used for communication.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnection.Handler">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.Safari.Internal.IHandler"/> implementation used for parsing and handling requests.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnection.ConnectionInfo">
            <summary>
            Gets an <see cref="T:OpenQA.Selenium.Safari.Internal.IWebSocketConnectionInfo"/> object describing the connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo">
            <summary>
            Provides information about a WebSocket connection.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo"/> class from being created.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.Create(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest,System.String)">
            <summary>
            Creates a <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo"/> for a given request and IP address.
            </summary>
            <param name="request">The <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> to get the connection information for.</param>
            <param name="clientIPAddress">The IP address of the client connection.</param>
            <returns>The created <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo"/>.</returns>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.SubProtocol">
            <summary>
            Gets the subprotocol of the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.Origin">
            <summary>
            Gets the origin of the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.Host">
            <summary>
            Gets the host for the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.Path">
            <summary>
            Gets the path for the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.ClientIPAddress">
            <summary>
            Gets the IP address of the client for the connection.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketConnectionInfo.Cookies">
            <summary>
            Gets the collection of cookies for the connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.WebSocketException">
            <summary>
            Provides a base exception for WebSocket errors.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class with a specified error message.
            </summary>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The inner exception that is the cause of this exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class with a specified status code.
            </summary>
            <param name="statusCode">The status code of the exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class with a specified status code
            and error message.
            </summary>
            <param name="statusCode">The status code of the exception.</param>
            <param name="message">The message for the exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class with a specified status code,
            error message, and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="statusCode">The status code for the exception.</param>
            <param name="message">The message for the exception.</param>
            <param name="innerException">The inner exception that is the cause of this exception.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketException"/> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketException.StatusCode">
            <summary>
            Gets the status code.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest">
            <summary>
            Defines an HTTP request via the WebSocket protocol.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Method">
            <summary>
            Gets or sets the HTTP method of the request.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Path">
            <summary>
            Gets or sets the path of the request.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Body">
            <summary>
            Gets or sets the body of the request
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Scheme">
            <summary>
            Gets or sets the scheme of the request.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Payload">
            <summary>
            Gets or sets the WebSocket payload of the request.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Headers">
            <summary>
            Gets the headers for the request.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest.Item(System.String)">
            <summary>
            Gets or sets the value associated with the specified header.
            </summary>
            <param name="name">The name of the header.</param>
            <returns>The value of the header, if it exists. If it does not exist, returns an empty string.</returns>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.WebSocketServer">
            <summary>
            Provides an implementation of a WebSocket server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketServer"/> class.
            </summary>
            <param name="location">The location at which to listen for connections.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketServer"/> class.
            </summary>
            <param name="port">The port on which to listen for connections.</param>
            <param name="location">The location at which to listen for connections.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.Start">
            <summary>
            Starts the server.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketServer"/>.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.OnConnectionOpened(OpenQA.Selenium.Safari.Internal.ConnectionEventArgs)">
            <summary>
            Raises the ConnectionOpened event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.OnConnectionClosed(OpenQA.Selenium.Safari.Internal.ConnectionEventArgs)">
            <summary>
            Raises the ConnectionClosed event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.ConnectionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.OnStandardHttpRequestReceived(OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs)">
            <summary>
            Raises the StandardHttpRequestReceived event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.StandardHttpRequestReceivedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.OnMessageReceived(OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs)">
            <summary>
            Raises the MessageReceived event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.OnErrorOccurred(OpenQA.Selenium.Safari.Internal.ErrorEventArgs)">
            <summary>
            Raises the ErrorOccurred event.
            </summary>
            <param name="e">An <see cref="T:OpenQA.Selenium.Safari.Internal.ErrorEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.WebSocketServer.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:OpenQA.Selenium.Safari.Internal.SocketWrapper"/> and optionally 
            releases the managed resources.
            </summary>
            <param name="disposing"><see langword="true"/> to release managed and resources; 
            <see langword="false"/> to only release unmanaged resources.</param>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketServer.MessageReceived">
            <summary>
            Event raised when a message is received from the WebSocket.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketServer.Opened">
            <summary>
            Event raised when a connection is opened.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketServer.Closed">
            <summary>
            Event raised when a connection is closed.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketServer.ErrorOccurred">
            <summary>
            Event raised when an error occurs.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.WebSocketServer.StandardHttpRequestReceived">
            <summary>
            Event raised when a non-WebSocket message is received.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketServer.ListenerSocket">
            <summary>
            Gets or sets the <see cref="T:OpenQA.Selenium.Safari.Internal.ISocket"/> on which communication occurs.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketServer.Location">
            <summary>
            Gets the location the server is listening on for connections.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketServer.Port">
            <summary>
            Gets the port the server is listening on for connections.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketServer.Certificate">
            <summary>
            Gets or sets the certificate used for authentication.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.WebSocketServer.IsSecure">
            <summary>
            Gets a value indicating whether the connection is secure.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes">
            <summary>
            Provides status codes for the WebSocket protocol
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.NormalClosure">
            <summary>
            Indicates a normal closure status.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.GoingAway">
            <summary>
            Indicates a notification that the socket is closing.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.ProtocolError">
            <summary>
            Indicates an error in the protocol.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.UnsupportedDataType">
            <summary>
            Indicates an attempt to transmit an unsupported data type.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.NoStatusReceived">
            <summary>
            Indicates no status information received.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.AbnormalClosure">
            <summary>
            Represens an abnormal closure of the socket.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.InvalidFramePayloadData">
            <summary>
            Indicates invalid data in the frame.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.PolicyViolation">
            <summary>
            Indicates a policy violation.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.MessageTooBig">
            <summary>
            Indicates that the message is too big.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.MandatoryExt">
            <summary>
            Indicates a mandatory extension.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.InternalServerError">
            <summary>
            Indicates an internal server error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.TlsHandshake">
            <summary>
            Indicates a TLS handshake.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.ApplicationError">
            <summary>
            Indicates an application error.
            </summary>
        </member>
        <member name="F:OpenQA.Selenium.Safari.Internal.WebSocketStatusCodes.ValidCloseCodes">
            <summary>
            A collection of all of the status codes indicating a valid closing of the connection.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler">
            <summary>
            Provides a request handler for the Hixie76 or Hybi00 version of the WebSocket protocol.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler">
            <summary>
            Provides the base class for handling WebSocket protocol requests.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.ProcessData(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Processes data received by the connection.
            </summary>
            <param name="data">The data to be processed.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.CreateHandshake">
            <summary>
            Creates a handshake message for initiating connections.
            </summary>
            <returns>A byte array containing the handshake message.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.CreateTextFrame(System.String)">
            <summary>
            Creates a frame for text messages in the WebSocket protocol.
            </summary>
            <param name="text">The text of the message.</param>
            <returns>A byte array containing the message frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.CreateBinaryFrame(System.Byte[])">
            <summary>
            Creates a frame for binary messages in the WebSocket protocol.
            </summary>
            <param name="frameData">The binary data of the message.</param>
            <returns>A byte array containing the message frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.CreateCloseFrame(System.Int32)">
            <summary>
            Creates a frame for close messages in the WebSocket protocol.
            </summary>
            <param name="code">The connection close code of the message.</param>
            <returns>A byte array containing the message frame.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.ProcessReceivedData">
            <summary>
            Receives the data from the protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.GetHandshake">
            <summary>
            Gets the handshake for WebSocket protocol.
            </summary>
            <returns>A byte array representing the handshake in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.GetTextFrame(System.String)">
            <summary>
            Prepares a text frame for the given text.
            </summary>
            <param name="text">The text for which to prepare the frame</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.GetBinaryFrame(System.Byte[])">
            <summary>
            Prepares a binary frame for the given binary data.
            </summary>
            <param name="frameData">The binary data for which to prepare the frame.</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.GetCloseFrame(System.Int32)">
            <summary>
            Prepares a close frame for the given connection.
            </summary>
            <param name="code">The code to use in closing the connection.</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.OnTextMessageHandled(OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs)">
            <summary>
            Raises the TextMessageHandled event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.TextMessageHandledEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.OnBinaryMessageHandled(OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs)">
            <summary>
            Raises the BinaryMessageHandled event.
            </summary>
            <param name="e">A <see cref="T:OpenQA.Selenium.Safari.Internal.BinaryMessageHandledEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.OnCloseHandled(System.EventArgs)">
            <summary>
            Raises the CloseHandled event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.TextMessageHandled">
            <summary>
            Event raised when a text message is processed by the handler.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.BinaryMessageHandled">
            <summary>
            Event raised when a binary message is processed by the handler.
            </summary>
        </member>
        <member name="E:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.CloseHandled">
            <summary>
            Event raised when a close message is processed by the handler.
            </summary>
        </member>
        <member name="P:OpenQA.Selenium.Safari.Internal.Handlers.RequestHandler.Data">
            <summary>
            Gets the data to be handled by this handler.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler.#ctor(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler"/> class.
            </summary>
            <param name="request">The <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> to handle.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler.Create(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest)">
            <summary>
            Creates a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler"/>.
            </summary>
            <param name="request">The <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> to handle.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Safari.Internal.IHandler"/> to perform handling of subsequent requests.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler.GetHandshake">
            <summary>
            Gets the handshake for WebSocket protocol.
            </summary>
            <returns>A byte array representing the handshake in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler.GetTextFrame(System.String)">
            <summary>
            Prepares a text frame for the given text.
            </summary>
            <param name="text">The text for which to prepare the frame.</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Hybi00Handler.ProcessReceivedData">
            <summary>
            Receives the data from the protocol.
            </summary>
        </member>
        <member name="T:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler">
            <summary>
            Provides a handler for the RFC 6455 version of the WebSocket protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.#ctor(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler"/> class.
            </summary>
            <param name="request">The <see cref="T:OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest"/> to handle.</param>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.Create(OpenQA.Selenium.Safari.Internal.WebSocketHttpRequest)">
            <summary>
            Creates a new instance of the handler.
            </summary>
            <param name="request">The request to handle.</param>
            <returns>A <see cref="T:OpenQA.Selenium.Safari.Internal.IHandler"/> to perform handling of subsequent requests.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.ProcessReceivedData">
            <summary>
            Receives data from the protocol.
            </summary>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.GetTextFrame(System.String)">
            <summary>
            Prepares a text frame for the given text.
            </summary>
            <param name="text">The text for which to prepare the frame.</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.GetCloseFrame(System.Int32)">
            <summary>
            Prepares a close frame for the given connection.
            </summary>
            <param name="code">The code to use in closing the connection.</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.GetHandshake">
            <summary>
            Gets the handshake for WebSocket protocol.
            </summary>
            <returns>A byte array representing the handshake in the WebSocket protocol.</returns>
        </member>
        <member name="M:OpenQA.Selenium.Safari.Internal.Handlers.Rfc6455Handler.GetBinaryFrame(System.Byte[])">
            <summary>
            Prepares a binary frame for the given binary data.
            </summary>
            <param name="frameData">The binary data for which to prepare the frame.</param>
            <returns>A byte array representing the frame in the WebSocket protocol.</returns>
        </member>
    </members>
</doc>
